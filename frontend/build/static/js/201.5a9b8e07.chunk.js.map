{"version":3,"file":"static/js/201.5a9b8e07.chunk.js","mappings":"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","sources":["components/Event/create-event.js","components/Event/event-item-card.js","components/Profile/current-user-profile.js","components/Suggestions/popover-item.js","components/Suggestions/utilities/suggest-handler.js","actions/suggestAction.js","components/Suggestions/suggest-item.js","components/Dashboards/main-dash.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Col, Row, Form, Card } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { createNewEvent, getAllEvents } from \"../../actions/eventActions\";\nimport { emitter } from \"../client/socket\";\nimport CTAButton from \"../SiteElements/cta-button\";\nimport { Submit } from \"../SiteElements/icons\";\nimport { MentionFilter } from \"../Utilities/mention\";\nimport { SearchParam } from \"../Utilities/search-param\";\n\nfunction CreateEvent(props) {\n  const dispatch = useDispatch();\n  const formRef = useRef(0);\n  const [title, setTitle] = useState(\"\");\n  const [maxMembers, setMaxMembers] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [load, setLoad] = useState(false);\n  const [validateFormEmpty, setValidateFormEmpty] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const eventDate = new Date(date);\n\n  let pageId = SearchParam();\n\n  useEffect(() => {\n    if (details === \"\" || details === \"<p><br></p>\") {\n      setValidateFormEmpty(true);\n    } else {\n      setValidateFormEmpty(false);\n    }\n  }, [details]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const postData = {\n      title: title,\n      maxMember: maxMembers,\n      details: details,\n      year: eventDate.getFullYear(),\n      month: eventDate.getMonth() + 1,\n      day: eventDate.getDate(),\n      hour: time !== \"\" ? parseInt(time.split(\":\")[0]) : \"\",\n      minute: time !== \"\" ? parseInt(time.split(\":\")[1]) : \"\",\n    };\n    dispatch(createNewEvent(postData, setLoad, setError)).then(() => {\n      dispatch(getAllEvents(pageId));\n      emitter(MentionFilter(details));\n    });\n  };\n\n  useEffect(() => {\n    if (error === 200) {\n      formRef.current.reset();\n      setTitle(\"\");\n      setDate(\"\");\n      setTime(\"\");\n      setDetails(\"\");\n      setError(\"\");\n    }\n  }, [error]);\n\n  //data from suggestions\n  useEffect(() => {\n    if (Object.keys(props.suggestion).length !== 0) {\n      setTitle(`${props.suggestion.title} - ${props.suggestion.category}`);\n      setDetails(\n        `Location: ${props.suggestion.location} \\nLink: ${props.suggestion.link}\\n\\n`\n      );\n      setDate(new Date(props.suggestion.time).toISOString().split(\"T\")[0]);\n      setTime(\n        new Date(props.suggestion.time).toLocaleTimeString(\"en-US\", {\n          timeStyle: \"short\",\n          hour12: false,\n        })\n      );\n    }\n  }, [props.suggestion]);\n\n  return (\n    <Card className=\"event-card\">\n      <Card.Header>\n        <h3 className=\"fw-bold m-0\">Create event</h3>\n      </Card.Header>\n      <Card.Body>\n        <Form\n          onSubmit={(e) => {\n            handleSubmit(e);\n          }}\n          ref={formRef}\n        >\n          <div className=\"new-post-container\">\n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label className=\"m-1\">Event Title</Form.Label>\n                  <Form.Control\n                    type=\"title\"\n                    placeholder=\"Christmas social\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label className=\"m-1\">Size</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    className=\"mb-3\"\n                    placeholder=\"14\"\n                    onChange={(e) => setMaxMembers(parseInt(e.target.value))}\n                    min=\"2\"\n                    required\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label className=\"m-1\">Time</Form.Label>\n\n                  <Form.Control\n                    type=\"time\"\n                    placeholder=\"Time\"\n                    value={time}\n                    onChange={(e) => setTime(e.target.value)}\n                    required\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label className=\"m-1\">Date</Form.Label>\n\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    value={date}\n                    onChange={(e) => setDate(e.target.value)}\n                    min={\n                      new Date(\n                        Date.now() - new Date().getTimezoneOffset() * 60000\n                      )\n                        .toISOString()\n                        .split(\"T\")[0]\n                    }\n                    required\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Form.Group>\n              <Form.Control\n                spellCheck={true}\n                placeholder=\"Event details...\"\n                as=\"textarea\"\n                value={details}\n                onChange={(e) => setDetails(e.target.value)}\n                rows={4}\n                required\n              />\n            </Form.Group>\n          </div>\n\n          <div className=\"d-flex justify-content-between mt-3\">\n            <small className=\"text-danger\">{error}</small>\n            <CTAButton\n              type={\"submit\"}\n              btnStyle={\"formBtn cta_button\"}\n              variant={\"primary\"}\n              formValidation={validateFormEmpty}\n              isLoading={load}\n              placeholder={\n                <div className=\"d-flex align-items-center\">\n                  <Submit />\n                  Publish\n                </div>\n              }\n            />\n          </div>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default CreateEvent;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport PopoverItem from \"../Profile/popover-item\";\nimport { ArrowRight } from \"../SiteElements/icons\";\nimport { BadgeItem, RequestBtn, StatusBadge } from \"./utilities/event-builder\";\n\nfunction EventItemCard(props) {\n  return (\n    <div className=\"event-card_dash\">\n      <div className=\"d-flex\" id=\"card_header\">\n        <img\n          src={props.eventData.gravatarImage}\n          className=\"userProf-img me-2\"\n          id=\"card-img\"\n          alt=\"Img\"\n        />\n        <PopoverItem data={props.eventData.userName} />\n\n        <div className=\"me-auto\">\n          <span className=\"card-timestamp text-muted align-self-center ms-1\">\n            {props.eventData.humanTimeDiffCreatedAt} ago\n          </span>\n        </div>\n\n        <StatusBadge joinedStatus={props.eventData.joinedStatus} />\n        <RequestBtn\n          JoinEvent={props.eventData}\n          joinedStatus={props.eventData.joinedStatus}\n          btnStyleFull={false}\n        />\n      </div>\n\n      <Card>\n        <Card.Body>\n          <div className=\"event-brief mt-1\">\n            <h4>{props.eventData.title} </h4>\n          </div>\n\n          <div className=\"mt-2\">\n            <p\n              className=\"text-muted content_sm1\"\n              dangerouslySetInnerHTML={{ __html: props.eventData.details }}\n            />\n          </div>\n\n          <div>\n            <BadgeItem\n              content={props.eventData.timeToEvent}\n              eventStatus={props.eventData.eventStatus}\n            />\n          </div>\n        </Card.Body>\n        <Card.Footer>\n          <Link to={`/event/${props.eventData.id}`}>\n            Details <ArrowRight />\n          </Link>\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n\nexport default EventItemCard;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUserProfile } from \"../../actions/userActions\";\nimport { DisplayImage } from \"../SiteElements/user-displayimg\";\nimport { UserCardInfo, VoteBadge } from \"./utilities/profile-builder\";\n\nfunction CurrentUserProfile() {\n  const dispatch = useDispatch();\n  const [currUserProfile, setCurrUserProfile] = useState({});\n\n  useEffect(() => {\n    dispatch(getCurrentUserProfile());\n  }, [dispatch]);\n\n  var currProfile = useSelector(\n    (securityReducer) => securityReducer.users.currProfile\n  );\n\n  useEffect(() => {\n    if (currProfile) {\n      setCurrUserProfile(currProfile.data);\n    }\n  }, [currProfile]);\n\n  return (\n    <>\n      {currUserProfile ? (\n        <div className=\"w-100\">\n          <div className=\"d-flex align-items-center userInfo-div\">\n            <DisplayImage image={currUserProfile.gravatarImage} />\n            <div className=\"ms-3\">\n              <Link\n                to={{\n                  pathname: \"/profile\",\n                  search: `user=${currUserProfile.username}`,\n                }}\n              >\n                @{currUserProfile.username}\n              </Link>\n\n              <small className=\"d-block text-muted\">\n                {currUserProfile.email}\n              </small>\n            </div>\n          </div>\n          <div className=\"mt-3\">\n            <VoteBadge votes={currUserProfile.totalVote} />\n            <UserCardInfo />\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport default CurrentUserProfile;\n","import React, { useRef, useState } from \"react\";\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\n\nconst PopoverItem = (props) => {\n  const [show, setShow] = useState(false);\n  const ref = useRef(null);\n\n  const handleOnMouseEnter = () => {\n    setShow(true);\n  };\n  const handleOnMouseLeave = () => {\n    setShow(false);\n  };\n\n  return (\n    <OverlayTrigger\n      show={show}\n      placement=\"auto\"\n      container={ref}\n      overlay={\n        <Popover\n          id=\"popover-basic\"\n          onMouseEnter={handleOnMouseEnter}\n          onMouseLeave={handleOnMouseLeave}\n        >\n          <Popover.Body>\n            <div className=\"p-2\">\n              <span className=\"fw-bold\">Location: </span>\n              <span>{props.content.location}</span>\n            </div>\n            <div className=\"p-2\">\n              <span className=\"fw-bold\">Date: </span>\n              <span>\n                {new Date(props.content.timeStamp).toLocaleDateString()}\n              </span>\n            </div>\n            <div className=\"p-2\">\n              <span className=\"fw-bold\">Time: </span>\n              <span>\n                {new Date(props.content.timeStamp).toLocaleTimeString(\"en-US\", {\n                  timeStyle: \"short\",\n                  hour12: true,\n                })}\n              </span>\n            </div>\n            <div className=\"p-2\">\n              <a href={props.content.link} rel=\"noreferrer\" target=\"_blank\">\n                More Information\n              </a>\n            </div>\n          </Popover.Body>\n        </Popover>\n      }\n    >\n      <span\n        onMouseEnter={handleOnMouseEnter}\n        onMouseLeave={handleOnMouseLeave}\n        ref={ref}\n        className=\"username_tags align-self-center\"\n      >\n        {props.icon}\n      </span>\n    </OverlayTrigger>\n  );\n};\n\nexport default PopoverItem;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSuggestions } from \"../../../actions/suggestAction\";\n\nexport const EventSuggestHandler = (pageId) => {\n  const dispatch = useDispatch();\n  const [suggestData, setSuggestData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    dispatch(getSuggestions(pageId ? pageId : 1, setIsLoading));\n  }, [dispatch, pageId, setIsLoading]);\n\n  var allSuggestData = useSelector(\n    (suggestReducer) => suggestReducer.suggestions.suggestEvent\n  );\n  useEffect(() => {\n    if (allSuggestData) {\n      setSuggestData(allSuggestData);\n    }\n  }, [allSuggestData]);\n\n  return { suggestData, isLoading };\n};\n","import axios from \"axios\";\nimport { refreshToken, setToken } from \"../securityUtils/setToken\";\nimport { GET_ERRORS, GET_EVENT_SUGGESTIONS } from \"./types\";\n\nexport const getSuggestions = (id, setIsLoading) => async (dispatch) => {\n  setIsLoading(true);\n  await refreshToken().then((ref) => {\n    setToken(ref.data.access);\n    axios\n      .get(`http://localhost:8000/api/event/createSuggestions/${id}/`)\n      .then((res) => {\n        dispatch({\n          type: GET_EVENT_SUGGESTIONS,\n          payload: res.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: error.response.data,\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  });\n};\n","import { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Badge from \"react-bootstrap/Badge\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Information } from \"../SiteElements/icons\";\nimport { Skeleton } from \"../SiteElements/loader\";\nimport PopoverItem from \"./popover-item\";\nimport { EventSuggestHandler } from \"./utilities/suggest-handler\";\n\nfunction SuggestItem(props) {\n  const [data, setData] = useState(\"\");\n  const suggestData = EventSuggestHandler(1);\n\n  useEffect(() => {\n    if (props.userData && data) {\n      props.userData(data);\n    }\n  }, [data, props]);\n\n  let loader;\n  for (var i = 0; i < 4; i++) {\n    loader = <Skeleton />;\n  }\n\n  return (\n    <>\n      <ListGroup as=\"ol\" className=\"mb-3 suggested\">\n        <div className=\"ps-1\">\n          <p className=\"fw-bold m-0\">Suggestions</p>\n        </div>\n        {suggestData.suggestData.data\n          ? suggestData.suggestData.data.map((item, index) => {\n              return (\n                <ListGroup.Item key={index} as=\"li\" className=\"p-3\">\n                  <div className=\"d-flex justify-content-between align-items-start\">\n                    <div className=\"me-auto\">\n                      <div className=\"fw-bold\">{item.title}</div>\n                    </div>\n\n                    <Badge bg=\"secondary\" pill>\n                      {item.category}\n                    </Badge>\n                  </div>\n\n                  <div className=\"mt-3\">\n                    <img\n                      src={item.image}\n                      alt=\"suggested-event-img\"\n                      width=\"100%\"\n                    />\n                  </div>\n                  <div className=\"d-flex justify-content-between align-items-start mt-4\">\n                    <PopoverItem\n                      content={{\n                        location: item.location,\n                        timeStamp: item.time,\n                        link: item.link,\n                      }}\n                      icon={<Information />}\n                    />\n\n                    <Button\n                      className=\"d-block\"\n                      onClick={() => setData(item)}\n                      size=\"sm\"\n                    >\n                      Event it\n                    </Button>\n                  </div>\n                </ListGroup.Item>\n              );\n            })\n          : suggestData.isLoading\n          ? loader\n          : \"\"}\n      </ListGroup>\n    </>\n  );\n}\n\nexport default SuggestItem;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport CreatePost from \"../Event/create-event\";\nimport Pagination from \"../SiteElements/pagination\";\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { SearchParam } from \"../Utilities/search-param\";\nimport EventItemCard from \"../Event/event-item-card\";\nimport CurrentUserProfile from \"../Profile/current-user-profile\";\nimport { EventHandler } from \"../Event/utilities/action-handlers\";\nimport SuggestItem from \"../Suggestions/suggest-item\";\n\nfunction MainDash() {\n  //pagination and event api\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage] = useState(10);\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const { state } = useLocation();\n\n  let pageId = SearchParam();\n  const eventData = EventHandler(pageId);\n\n  useEffect(() => {\n    if (state) {\n      const { id } = state;\n      setCurrentPage(id);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    setSearchParams({ page: currentPage });\n  }, [setSearchParams, currentPage]);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  //suggestions\n  const [suggestedData, setSuggestedData] = useState({});\n\n  const child_data = (data) => {\n    if (data) {\n      setSuggestedData(data);\n    }\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div className=\"dash-container\">\n        <div className=\"sidebar\">\n          <div className=\"sidebar-wrapper\">\n            <div className=\"sidebar_left\">\n              <SuggestItem userData={child_data} />\n            </div>\n          </div>\n        </div>\n        <div className=\"content\">\n          <Container>\n            <div>\n              <CreatePost suggestion={suggestedData} />\n              <Row xs={1} sm={1} md={1}>\n                {eventData.results\n                  ? eventData.results.map((event, index) => (\n                      <Col key={index}>\n                        <EventItemCard eventData={event} />\n                      </Col>\n                    ))\n                  : \"\"}\n              </Row>\n            </div>\n            {eventData.count > 10 ? (\n              <Pagination\n                postsPerPage={postPerPage}\n                totalPosts={eventData.count}\n                paginate={paginate}\n                currentPage={currentPage}\n              />\n            ) : (\n              \"\"\n            )}\n          </Container>\n        </div>\n\n        <div className=\"sidebar\">\n          <div className=\"sidebar-wrapper \">\n            <div className=\"sidebar_right\">\n              <Card>\n                <Card.Body>\n                  <CurrentUserProfile />\n                </Card.Body>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainDash;\n"],"names":["props","dispatch","useDispatch","formRef","useRef","useState","title","setTitle","maxMembers","setMaxMembers","details","setDetails","date","setDate","time","setTime","load","setLoad","validateFormEmpty","setValidateFormEmpty","error","setError","eventDate","Date","pageId","SearchParam","useEffect","handleSubmit","e","preventDefault","postData","maxMember","year","getFullYear","month","getMonth","day","getDate","hour","parseInt","split","minute","createNewEvent","then","getAllEvents","emitter","MentionFilter","current","reset","Object","keys","suggestion","length","category","location","link","toISOString","toLocaleTimeString","timeStyle","hour12","Card","className","Form","onSubmit","ref","Row","Col","type","placeholder","value","onChange","target","required","min","now","getTimezoneOffset","spellCheck","as","rows","btnStyle","variant","formValidation","isLoading","id","src","eventData","gravatarImage","alt","data","userName","humanTimeDiffCreatedAt","joinedStatus","JoinEvent","btnStyleFull","dangerouslySetInnerHTML","__html","content","timeToEvent","eventStatus","to","currUserProfile","setCurrUserProfile","getCurrentUserProfile","currProfile","useSelector","securityReducer","users","image","pathname","search","username","email","votes","totalVote","show","setShow","handleOnMouseEnter","handleOnMouseLeave","OverlayTrigger","placement","container","overlay","Popover","onMouseEnter","onMouseLeave","timeStamp","toLocaleDateString","href","rel","icon","EventSuggestHandler","suggestData","setSuggestData","setIsLoading","refreshToken","setToken","access","axios","res","GET_EVENT_SUGGESTIONS","payload","catch","GET_ERRORS","response","finally","getSuggestions","allSuggestData","suggestReducer","suggestions","suggestEvent","loader","setData","userData","i","ListGroup","map","item","index","Badge","bg","pill","width","Button","onClick","size","currentPage","setCurrentPage","postPerPage","useSearchParams","setSearchParams","state","useLocation","EventHandler","page","suggestedData","setSuggestedData","style","position","Container","xs","sm","md","results","event","count","postsPerPage","totalPosts","paginate","pageNumber"],"sourceRoot":""}