{"ast":null,"code":"import axios from \"axios\";\nimport { GET_USERS, GET_ERRORS, SET_CURRENT_USER, SET_NEW_USER } from \"./types\";\nimport { setToken, refreshToken } from \"../securityUtils/setToken\";\nimport jwt_decode from \"jwt-decode\";\nimport Cookies from \"js-cookie\";\nexport const getUsers = () => async dispatch => {\n  await axios.get(`http://localhost:8000/api/user/all/`).then(res => {\n    dispatch({\n      type: GET_USERS,\n      payload: res.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  });\n};\nexport const createNewUser = (userData, setLoad, navigate) => async dispatch => {\n  setLoad(true);\n  await axios.post(\"http://localhost:8000/api/auth/register/\", userData).then(res => {\n    if (res.status === 200) {\n      navigate(\"/\", {\n        replace: true,\n        state: {\n          id: res.data\n        }\n      });\n    }\n    dispatch({\n      type: GET_ERRORS,\n      payload: res\n    });\n    dispatch({\n      type: SET_NEW_USER,\n      payload: res.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: SET_NEW_USER,\n      payload: {}\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response\n    });\n  }).finally(() => {\n    setLoad(false);\n  });\n};\nexport const login = (LoginRequest, navigate, setLoad) => async dispatch => {\n  //post => login request\n  setLoad(true);\n  await axios.post(\"http://localhost:8000/api/auth/login/\", LoginRequest).then(res => {\n    //extract token from data\n    const refToken = res.data.refresh;\n    const accessToken = res.data.access;\n    //store token in local storage\n    Cookies.set(\"token\", refToken, {\n      secure: false,\n      sameSite: \"strict\"\n    });\n    //set token in header\n    setToken(accessToken);\n    //get data from response\n    const decoded_token = jwt_decode(res.data.access);\n    const decoded = {\n      username: res.data.username\n    };\n    localStorage.setItem(\"username\", decoded.username);\n    if (res.status === 200 && Cookies.get(\"token\")) {\n      navigate(\"/posts\");\n    }\n    dispatch({\n      type: GET_ERRORS,\n      payload: res\n    });\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded_token\n    });\n  }).catch(error => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response\n    });\n  }).finally(() => {\n    setLoad(false);\n  });\n};\nexport const logout = (refToken, navigate) => async dispatch => {\n  await refreshToken().then(ref => {\n    setToken(ref.data.access);\n    return axios.post(\"http://localhost:8000/api/auth/logout/\", refToken);\n  });\n  setToken(false);\n  localStorage.clear();\n  Cookies.remove(\"token\");\n  // navigate(\"/\", { replace: true });\n  navigate(0);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: null\n  });\n  dispatch({\n    type: GET_ERRORS,\n    payload: {}\n  });\n};\nexport const resetPwEmail = (userData, setLoad, setShow) => async dispatch => {\n  setLoad(true);\n  await axios.post(\"http://localhost:8000/api/auth/sendResetPasswordEmail/\", userData).then(res => {\n    if (res.status === 200) {\n      setLoad(false);\n      setShow(true);\n    }\n    dispatch({\n      type: GET_ERRORS,\n      payload: res\n    });\n  }).catch(error => {\n    setLoad(false);\n    setShow(true);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response\n    });\n  });\n};\nexport const resetPw = (userData, setLoad, setShow) => async dispatch => {\n  setLoad(true);\n  await axios.post(`http://localhost:8000/api/auth/resetPassword/`, userData).then(res => {\n    if (res.status === 200) {\n      setLoad(false);\n      setShow(true);\n    }\n    dispatch({\n      type: GET_ERRORS,\n      payload: res\n    });\n  }).catch(error => {\n    setLoad(false);\n    setShow(true);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response\n    });\n  });\n};","map":{"version":3,"names":["axios","GET_USERS","GET_ERRORS","SET_CURRENT_USER","SET_NEW_USER","setToken","refreshToken","jwt_decode","Cookies","getUsers","dispatch","get","then","res","type","payload","data","catch","error","response","createNewUser","userData","setLoad","navigate","post","status","replace","state","id","finally","login","LoginRequest","refToken","refresh","accessToken","access","set","secure","sameSite","decoded_token","decoded","username","localStorage","setItem","logout","ref","clear","remove","resetPwEmail","setShow","resetPw"],"sources":["/Users/Manan/Desktop/runIt/frontend/src/actions/securityActions.js"],"sourcesContent":["import axios from \"axios\";\nimport { GET_USERS, GET_ERRORS, SET_CURRENT_USER, SET_NEW_USER } from \"./types\";\nimport { setToken, refreshToken } from \"../securityUtils/setToken\";\nimport jwt_decode from \"jwt-decode\";\nimport Cookies from \"js-cookie\";\n\nexport const getUsers = () => async (dispatch) => {\n  await axios\n    .get(`http://localhost:8000/api/user/all/`)\n    .then((res) => {\n      dispatch({\n        type: GET_USERS,\n        payload: res.data,\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    });\n};\n\nexport const createNewUser =\n  (userData, setLoad, navigate) => async (dispatch) => {\n    setLoad(true);\n    await axios\n      .post(\"http://localhost:8000/api/auth/register/\", userData)\n      .then((res) => {\n        if (res.status === 200) {\n          navigate(\"/\", {\n            replace: true,\n            state: { id: res.data },\n          });\n        }\n        dispatch({\n          type: GET_ERRORS,\n          payload: res,\n        });\n        dispatch({\n          type: SET_NEW_USER,\n          payload: res.data,\n        });\n      })\n\n      .catch((error) => {\n        dispatch({\n          type: SET_NEW_USER,\n          payload: {},\n        });\n        dispatch({\n          type: GET_ERRORS,\n          payload: error.response,\n        });\n      })\n      .finally(() => {\n        setLoad(false);\n      });\n  };\n\nexport const login = (LoginRequest, navigate, setLoad) => async (dispatch) => {\n  //post => login request\n  setLoad(true);\n  await axios\n    .post(\"http://localhost:8000/api/auth/login/\", LoginRequest)\n    .then((res) => {\n      //extract token from data\n      const refToken = res.data.refresh;\n      const accessToken = res.data.access;\n      //store token in local storage\n      Cookies.set(\"token\", refToken, { secure: false, sameSite: \"strict\" });\n      //set token in header\n      setToken(accessToken);\n      //get data from response\n      const decoded_token = jwt_decode(res.data.access);\n      const decoded = {\n        username: res.data.username,\n      };\n\n      localStorage.setItem(\"username\", decoded.username);\n\n      if (res.status === 200 && Cookies.get(\"token\")) {\n        navigate(\"/posts\");\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: res,\n      });\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_token,\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response,\n      });\n    })\n    .finally(() => {\n      setLoad(false);\n    });\n};\n\nexport const logout = (refToken, navigate) => async (dispatch) => {\n  await refreshToken().then((ref) => {\n    setToken(ref.data.access);\n    return axios.post(\"http://localhost:8000/api/auth/logout/\", refToken);\n  });\n\n  setToken(false);\n  localStorage.clear();\n  Cookies.remove(\"token\");\n  // navigate(\"/\", { replace: true });\n  navigate(0);\n\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: null,\n  });\n  dispatch({\n    type: GET_ERRORS,\n    payload: {},\n  });\n};\n\nexport const resetPwEmail =\n  (userData, setLoad, setShow) => async (dispatch) => {\n    setLoad(true);\n    await axios\n      .post(\"http://localhost:8000/api/auth/sendResetPasswordEmail/\", userData)\n      .then((res) => {\n        if (res.status === 200) {\n          setLoad(false);\n          setShow(true);\n        }\n        dispatch({\n          type: GET_ERRORS,\n          payload: res,\n        });\n      })\n\n      .catch((error) => {\n        setLoad(false);\n        setShow(true);\n\n        dispatch({\n          type: GET_ERRORS,\n          payload: error.response,\n        });\n      });\n  };\n\nexport const resetPw = (userData, setLoad, setShow) => async (dispatch) => {\n  setLoad(true);\n  await axios\n    .post(`http://localhost:8000/api/auth/resetPassword/`, userData)\n    .then((res) => {\n      if (res.status === 200) {\n        setLoad(false);\n        setShow(true);\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: res,\n      });\n    })\n\n    .catch((error) => {\n      setLoad(false);\n      setShow(true);\n\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response,\n      });\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}