{"ast":null,"code":"var _jsxFileName = \"/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/components/CreatPost.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Row, Card, Form, FloatingLabel, Button, Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNewEvent } from \"../actions/eventActions\";\nimport ReactQuill from \"react-quill\";\nimport Loading from \"./Loading\";\nimport ErrorToast from \"./ErrorToast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState({});\n  const [maxMembers, setMaxMembers] = useState({});\n  const [details, setDetails] = useState({});\n  const [load, setLoad] = useState(false);\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async e => {\n    _s();\n\n    e.preventDefault();\n    const [lgShow, setLgShow] = useState(false);\n    const postData = {\n      title: title,\n      maxMember: maxMembers,\n      details: details\n    };\n    dispatch(createNewEvent(postData, setLoad, setShow, setError));\n  };\n\n  _s(handleSubmit, \"KwAmMpBzpejpZoNIqJ++o9hKksA=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setLgShow(true),\n      children: \"Large modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      show: lgShow,\n      onHide: () => setLgShow(false),\n      \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-lg\",\n          children: \"Large Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            handleSubmit(e);\n          },\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"new-post-container p-3\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                    controlId: \"floatingInput\",\n                    label: \"Event Title\",\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"title\",\n                      placeholder: \"Event Title\",\n                      onChange: e => setTitle(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                    controlId: \"floatingInput2\",\n                    label: \"Maximum Members\",\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"number\",\n                      placeholder: \"Maximum Members\",\n                      onChange: e => setMaxMembers(parseInt(e.target.value)),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n              theme: \"snow\",\n              value: details,\n              onChange: setDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"mb-2 mt-3 w-25\",\n                children: (() => {\n                  if (load) {\n                    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 26\n                    }, this);\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: \"Confirm\"\n                    }, void 0, false);\n                  }\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CreatePost, \"jCTywJqpZtK8P+M3ShN/mLGIyqw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/components/CreatPost.js"],"names":["React","useState","useEffect","Col","Row","Card","Form","FloatingLabel","Button","Container","useDispatch","useSelector","createNewEvent","ReactQuill","Loading","ErrorToast","CreatePost","dispatch","title","setTitle","maxMembers","setMaxMembers","details","setDetails","load","setLoad","show","setShow","error","setError","handleSubmit","e","preventDefault","lgShow","setLgShow","postData","maxMember","target","value","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Col,\n  Row,\n  Card,\n  Form,\n  FloatingLabel,\n  Button,\n  Container,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNewEvent } from \"../actions/eventActions\";\nimport ReactQuill from \"react-quill\";\nimport Loading from \"./Loading\";\nimport ErrorToast from \"./ErrorToast\";\n\nfunction CreatePost() {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState({});\n  const [maxMembers, setMaxMembers] = useState({});\n  const [details, setDetails] = useState({});\n  const [load, setLoad] = useState(false);\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const [lgShow, setLgShow] = useState(false);\n\n\n    const postData = {\n      title: title,\n      maxMember: maxMembers,\n      details: details,\n    };\n\n    dispatch(createNewEvent(postData, setLoad, setShow, setError));\n  };\n\n  return (\n    <div className=\"mb-4\">\n               <Button onClick={() => setLgShow(true)}>Large modal</Button>\n\n        <Modal\n        size=\"lg\"\n        show={lgShow}\n        onHide={() => setLgShow(false)}\n        aria-labelledby=\"example-modal-sizes-title-lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\n            Large Modal\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form\n        onSubmit={(e) => {\n          handleSubmit(e);\n        }}\n      >\n    \n        <Container className=\"new-post-container p-3\">\n          <Row>\n            <Col>\n              <Form.Group className=\"mb-3\">\n                <FloatingLabel\n                  controlId=\"floatingInput\"\n                  label=\"Event Title\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"title\"\n                    placeholder=\"Event Title\"\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group className=\"mb-3\">\n                <FloatingLabel\n                  controlId=\"floatingInput2\"\n                  label=\"Maximum Members\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Maximum Members\"\n                    onChange={(e) => setMaxMembers(parseInt(e.target.value))}\n                    required\n                  />\n                </FloatingLabel>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <ReactQuill theme=\"snow\" value={details} onChange={setDetails} />\n          <div className=\"d-flex justify-content-center\">\n         {/*  <Button type=\"submit\" className=\"mb-2 mt-3 w-25\">\n              Add Friends\n            </Button> */}\n            <Button type=\"submit\" className=\"mb-2 mt-3 w-25\">\n              {(() => {\n                if (load) {\n                  return <Loading />;\n                } else {\n                  return <>Confirm</>;\n                }\n              })()}\n            </Button>\n            \n          </div>\n        </Container>\n      </Form>\n        </Modal.Body>\n      </Modal>\n\n     \n    </div>\n  );\n}\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}