{"ast":null,"code":"import { GET_USERS } from \"../actions/types\";\nconst initialState = {\n  users: {},\n  data: []\n};\n\nconst booleanPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function setUser() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state,\n        validToken: booleanPayload(action.payload),\n        user: action.payload\n      };\n\n    case GET_USERS:\n      return { ...state,\n        users: action.payload,\n        data: action.payload.data\n      };\n\n    case GET_USER:\n      return { ...state,\n        singleUser: action.payload,\n        userData: action.payload.data\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/reducers/securityReducer.js"],"names":["GET_USERS","initialState","users","data","booleanPayload","payload","setUser","state","action","type","SET_CURRENT_USER","validToken","user","GET_USER","singleUser","userData"],"mappings":"AAAA,SAASA,SAAT,QACO,kBADP;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAClC,MAAIA,OAAJ,EAAa;AACX,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CAND;;AAQA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,gBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,UAAU,EAAEP,cAAc,CAACI,MAAM,CAACH,OAAR,CAFrB;AAGLO,QAAAA,IAAI,EAAEJ,MAAM,CAACH;AAHR,OAAP;;AAKF,SAAKL,SAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELL,QAAAA,KAAK,EAAEM,MAAM,CAACH,OAFT;AAGLF,QAAAA,IAAI,EAAEK,MAAM,CAACH,OAAP,CAAeF;AAHhB,OAAP;;AAKF,SAAKU,QAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELO,QAAAA,UAAU,EAAEN,MAAM,CAACH,OAFd;AAGLU,QAAAA,QAAQ,EAAEP,MAAM,CAACH,OAAP,CAAeF;AAHpB,OAAP;;AAMF;AACE,aAAOI,KAAP;AArBJ;AAuBD","sourcesContent":["import { GET_USERS,\n} from \"../actions/types\";\n\nconst initialState = {\n  users: {},\n  data: [],\n};\n\nconst booleanPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function setUser(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanPayload(action.payload),\n        user: action.payload,\n      };\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        data: action.payload.data,\n      };\n    case GET_USER:\n      return {\n        ...state,\n        singleUser: action.payload,\n        userData: action.payload.data,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}