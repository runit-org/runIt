{"ast":null,"code":"import axios from \"axios\";\nimport { refreshToken, setToken } from \"../securityUtils/setToken\";\nimport { GET_ERRORS, GET_MONTHLY_EVENTS } from \"./types\";\nexport const getMonthlyEvents = (id, month, year) => async dispatch => {\n  await refreshToken().then(ref => {\n    setToken(ref.data.access);\n    axios.get(`http://localhost:8000/api/event/getMonthYear/${id}/${month}-${year}/`).then(res => {\n      dispatch({\n        type: GET_MONTHLY_EVENTS,\n        payload: res.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n  });\n};\nexport const getDayEvents = (id, date, month, year) => async dispatch => {\n  await refreshToken().then(ref => {\n    setToken(ref.data.access);\n    axios.get(`http://localhost:8000/api/event/getPerDate/${id}/${date}-${month}-${year}/`).then(res => {\n      dispatch({\n        type: GET_DAY_EVENTS,\n        payload: res.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n  });\n};","map":{"version":3,"names":["axios","refreshToken","setToken","GET_ERRORS","GET_MONTHLY_EVENTS","getMonthlyEvents","id","month","year","dispatch","then","ref","data","access","get","res","type","payload","catch","error","response","getDayEvents","date","GET_DAY_EVENTS"],"sources":["/Users/Manan/Desktop/runIt/frontend/src/actions/calendarActions.js"],"sourcesContent":["import axios from \"axios\";\nimport { refreshToken, setToken } from \"../securityUtils/setToken\";\nimport { GET_ERRORS, GET_MONTHLY_EVENTS } from \"./types\";\n\nexport const getMonthlyEvents = (id, month, year) => async (dispatch) => {\n  await refreshToken().then((ref) => {\n    setToken(ref.data.access);\n    axios\n      .get(\n        `http://localhost:8000/api/event/getMonthYear/${id}/${month}-${year}/`\n      )\n      .then((res) => {\n        dispatch({\n          type: GET_MONTHLY_EVENTS,\n          payload: res.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: error.response.data,\n        });\n      });\n  });\n};\n\nexport const getDayEvents = (id, date, month, year) => async (dispatch) => {\n  await refreshToken().then((ref) => {\n    setToken(ref.data.access);\n    axios\n      .get(\n        `http://localhost:8000/api/event/getPerDate/${id}/${date}-${month}-${year}/`\n      )\n      .then((res) => {\n        dispatch({\n          type: GET_DAY_EVENTS,\n          payload: res.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: error.response.data,\n        });\n      });\n  });\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,QAAQ,QAAQ,2BAA2B;AAClE,SAASC,UAAU,EAAEC,kBAAkB,QAAQ,SAAS;AAExD,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,EAAE,EAAEC,KAAK,EAAEC,IAAI,KAAK,MAAOC,QAAQ,IAAK;EACvE,MAAMR,YAAY,CAAC,CAAC,CAACS,IAAI,CAAEC,GAAG,IAAK;IACjCT,QAAQ,CAACS,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC;IACzBb,KAAK,CACFc,GAAG,CACD,gDAA+CR,EAAG,IAAGC,KAAM,IAAGC,IAAK,GACtE,CAAC,CACAE,IAAI,CAAEK,GAAG,IAAK;MACbN,QAAQ,CAAC;QACPO,IAAI,EAAEZ,kBAAkB;QACxBa,OAAO,EAAEF,GAAG,CAACH;MACf,CAAC,CAAC;IACJ,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBV,QAAQ,CAAC;QACPO,IAAI,EAAEb,UAAU;QAChBc,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACR;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMS,YAAY,GAAGA,CAACf,EAAE,EAAEgB,IAAI,EAAEf,KAAK,EAAEC,IAAI,KAAK,MAAOC,QAAQ,IAAK;EACzE,MAAMR,YAAY,CAAC,CAAC,CAACS,IAAI,CAAEC,GAAG,IAAK;IACjCT,QAAQ,CAACS,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC;IACzBb,KAAK,CACFc,GAAG,CACD,8CAA6CR,EAAG,IAAGgB,IAAK,IAAGf,KAAM,IAAGC,IAAK,GAC5E,CAAC,CACAE,IAAI,CAAEK,GAAG,IAAK;MACbN,QAAQ,CAAC;QACPO,IAAI,EAAEO,cAAc;QACpBN,OAAO,EAAEF,GAAG,CAACH;MACf,CAAC,CAAC;IACJ,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBV,QAAQ,CAAC;QACPO,IAAI,EAAEb,UAAU;QAChBc,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACR;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}