{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ALL_EVENTS, GET_ERRORS } from \"./types\";\nimport setToken from \"../securityUtils/setToken\";\nexport const getAllEvents = refToken => async dispatch => {\n  const ref = await axios.post(\"http://localhost:8000/api/auth/token/refresh/\", refToken).then(ref => {\n    console.log(ref.data.access);\n    setToken(ref.data.access);\n    return axios.get(`http://localhost:8000/api/event/all/`);\n  });\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: ref.data.access\n  });\n  /* const res = await axios.get(`http://localhost:8000/api/event/all/`);\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: res.data,\n  }); */\n};\nexport const createNewEvent = (postData, setLoad, setShow, setError) => async dispatch => {\n  try {\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/event/create/\", postData);\n    console.log(res);\n\n    if (res.data.success == \"true\") {\n      setLoad(false);\n      setShow(true);\n      setError(res.data.message);\n      window.location.reload();\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: res.data\n    });\n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.message);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/actions/eventActions.js"],"names":["axios","GET_ALL_EVENTS","GET_ERRORS","setToken","getAllEvents","refToken","dispatch","ref","post","then","console","log","data","access","get","type","payload","createNewEvent","postData","setLoad","setShow","setError","res","success","message","window","location","reload","error","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAA0BC,UAA1B,QAA4C,SAA5C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC5D,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAChB,+CADgB,EAEhBH,QAFgB,EAGhBI,IAHgB,CAGXF,GAAG,IAAI;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,CAASC,MAArB;AACAV,IAAAA,QAAQ,CAACI,GAAG,CAACK,IAAJ,CAASC,MAAV,CAAR;AAEA,WAAQb,KAAK,CAACc,GAAN,CAAW,sCAAX,CAAR;AAED,GATiB,CAAlB;AAUAR,EAAAA,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEd,cADC;AAEPe,IAAAA,OAAO,EAAET,GAAG,CAACK,IAAJ,CAASC;AAFX,GAAD,CAAR;AAIA;AACF;AACA;AACA;AACA;AACC,CApBM;AAsBP,OAAO,MAAMI,cAAc,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,OAApB,EAA6BC,QAA7B,KAA0C,MAAOf,QAAP,IAAoB;AAC1F,MAAI;AACFa,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAMG,GAAG,GAAG,MAAMtB,KAAK,CAACQ,IAAN,CAAW,yCAAX,EAAsDU,QAAtD,CAAlB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;;AACA,QAAGA,GAAG,CAACV,IAAJ,CAASW,OAAT,IAAoB,MAAvB,EAA8B;AAC5BJ,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,MAAAA,QAAQ,CAACC,GAAG,CAACV,IAAJ,CAASY,OAAV,CAAR;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AACDrB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb,UADC;AAEPc,MAAAA,OAAO,EAAEM,GAAG,CAACV;AAFN,KAAD,CAAR;AAKD,GAfD,CAeE,OAAOgB,KAAP,EAAc;AACdT,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,IAAAA,QAAQ,CAACO,KAAK,CAACC,QAAN,CAAejB,IAAf,CAAoBY,OAArB,CAAR;AACAlB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb,UADC;AAEPc,MAAAA,OAAO,EAAEY,KAAK,CAACC,QAAN,CAAejB;AAFjB,KAAD,CAAR;AAID;AACF,CAzBM","sourcesContent":["import axios from \"axios\";\nimport { GET_ALL_EVENTS,  GET_ERRORS } from \"./types\";\nimport setToken from \"../securityUtils/setToken\";\n\nexport const getAllEvents = (refToken) => async (dispatch) => {\n  const ref = await axios.post(\n    \"http://localhost:8000/api/auth/token/refresh/\",\n    refToken\n  ).then(ref => {\n    console.log(ref.data.access)\n    setToken(ref.data.access);\n    \n    return  axios.get(`http://localhost:8000/api/event/all/`);\n \n  })\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: ref.data.access\n  });\n  /* const res = await axios.get(`http://localhost:8000/api/event/all/`);\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: res.data,\n  }); */\n};\n\nexport const createNewEvent = (postData, setLoad, setShow, setError) => async (dispatch) => {\n  try {\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/event/create/\", postData);\n    console.log(res)\n    if(res.data.success == \"true\"){\n      setLoad(false)\n      setShow(true)\n      setError(res.data.message);\n      window.location.reload();\n    }\n    dispatch({\n      type: GET_ERRORS,\n      payload: res.data,\n    });\n  \n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.message);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}