{"ast":null,"code":"import axios from \"axios\";\nimport { GET_USERS, GET_ERRORS, SET_CURRENT_USER, SET_NEW_USER } from \"./types\";\nimport { setToken, refreshToken } from \"../securityUtils/setToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const getUsers = () => async dispatch => {\n  const res = await axios.get(`http://localhost:8000/api/user/all/`); // console.log(res)\n\n  dispatch({\n    type: GET_USERS,\n    payload: res.data\n  });\n};\nexport const createNewUser = (userData, setLoad, setShow, setError) => async dispatch => {\n  try {\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/auth/register/\", userData);\n\n    if (res.data.success == \"true\") {\n      setLoad(false);\n      setShow(true);\n      setError(res.data.message);\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n    dispatch({\n      type: SET_NEW_USER,\n      payload: res.data\n    });\n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.message);\n    dispatch({\n      type: SET_NEW_USER,\n      payload: {}\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const login = (LoginRequest, navigate, setLoad, setShow, setError) => async dispatch => {\n  try {\n    //post => login request\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/auth/login/\", LoginRequest);\n    console.log(res); //extract token from data\n\n    const refToken = res.data.refresh;\n    const accessToken = res.data.access; //store token in local storage\n\n    localStorage.setItem(\"token\", refToken);\n    localStorage.setItem(\"accessToken\", accessToken); //set token in header\n\n    setToken(accessToken); //get data from response\n\n    const decoded = {\n      username: res.data.username\n    };\n    localStorage.setItem(\"username\", decoded.username);\n\n    if (localStorage.getItem(\"token\")) {\n      navigate(\"/posts\");\n    } //dispatch to securityReducer\n\n    /*  dispatch({\n    type: GET_ERRORS,\n    payload: {},\n    }); */\n\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.detail);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const logout = (refToken, navigate) => async dispatch => {\n  /* const ref = await axios.post(\n    \"http://localhost:8000/api/auth/token/refresh/\",\n    refToken\n  ) */\n  const ref = await refreshToken().then(ref => {\n    console.log(ref.data.access);\n    setToken(ref.data.access);\n    return axios.post(\"http://localhost:8000/api/auth/logout/\", refToken);\n  });\n  /*   const res = await axios.post(\n      \"http://localhost:8000/api/auth/logout/\",\n      refToken\n    ); */\n\n  setToken(false);\n  localStorage.clear(); // navigate(\"/\");\n\n  if (!localStorage.getItem(\"token\")) {\n    navigate(\"/\");\n  }\n\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: null\n  });\n};\n/* export const getUser = () => async (dispatch) => {\n  const res = await axios.get(`http://localhost:8000/api/user/`);\n  dispatch({\n    type: GET_USER,\n    payload: res.data,\n  });\n}; */","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/actions/securityActions.js"],"names":["axios","GET_USERS","GET_ERRORS","SET_CURRENT_USER","SET_NEW_USER","setToken","refreshToken","jwt_decode","getUsers","dispatch","res","get","type","payload","data","createNewUser","userData","setLoad","setShow","setError","post","success","message","error","response","login","LoginRequest","navigate","console","log","refToken","refresh","accessToken","access","localStorage","setItem","decoded","username","getItem","detail","logout","ref","then","clear"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { GET_USERS, GET_ERRORS, SET_CURRENT_USER, SET_NEW_USER } from \"./types\";\nimport {setToken, refreshToken} from \"../securityUtils/setToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const getUsers = () => async (dispatch) => {\n  const res = await axios.get(`http://localhost:8000/api/user/all/`);\n  // console.log(res)\n  dispatch({\n    type: GET_USERS,\n    payload: res.data,\n  });\n};\n\nexport const createNewUser =\n  (userData, setLoad, setShow, setError) => async (dispatch) => {\n    try {\n      setLoad(true);\n      const res = await axios.post(\n        \"http://localhost:8000/api/auth/register/\",\n        userData\n      );\n\n      if (res.data.success == \"true\") {\n        setLoad(false);\n        setShow(true);\n        setError(res.data.message);\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: {},\n      });\n      dispatch({\n        type: SET_NEW_USER,\n        payload: res.data,\n      });\n    } catch (error) {\n      setLoad(false);\n      setShow(true);\n      setError(error.response.data.message);\n      dispatch({\n        type: SET_NEW_USER,\n        payload: {},\n      });\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    }\n  };\n\nexport const login =\n  (LoginRequest, navigate, setLoad, setShow, setError) => async (dispatch) => {\n    try {\n      //post => login request\n      setLoad(true);\n      const res = await axios.post(\n        \"http://localhost:8000/api/auth/login/\",\n        LoginRequest\n      );\n      console.log(res)\n      //extract token from data\n      const refToken = res.data.refresh;\n      const accessToken = res.data.access;\n      //store token in local storage\n      localStorage.setItem(\"token\", refToken);\n      localStorage.setItem(\"accessToken\", accessToken);\n      //set token in header\n      setToken(accessToken);\n      //get data from response\n      const decoded = {\n        username: res.data.username,\n      };\n\n      localStorage.setItem(\"username\", decoded.username);\n      if (localStorage.getItem(\"token\")) {\n        navigate(\"/posts\");\n      }\n\n      //dispatch to securityReducer\n      /*  dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    }); */\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded,\n      });\n    } catch (error) {\n      setLoad(false);\n      setShow(true);\n      setError(error.response.data.detail);\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    }\n  };\n\nexport const logout = (refToken, navigate) => async (dispatch) => {\n  /* const ref = await axios.post(\n    \"http://localhost:8000/api/auth/token/refresh/\",\n    refToken\n  ) */const ref = await refreshToken().then(ref => {\n    console.log(ref.data.access)\n    setToken(ref.data.access);\n    return  axios.post(\n      \"http://localhost:8000/api/auth/logout/\",\n      refToken\n    );\n  })\n  \n/*   const res = await axios.post(\n    \"http://localhost:8000/api/auth/logout/\",\n    refToken\n  ); */\n\n  setToken(false);\n  localStorage.clear();\n  // navigate(\"/\");\n  if (!localStorage.getItem(\"token\")) {\n    navigate(\"/\");\n  }\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: null,\n  });\n};\n\n/* export const getUser = () => async (dispatch) => {\n  const res = await axios.get(`http://localhost:8000/api/user/`);\n  dispatch({\n    type: GET_USER,\n    payload: res.data,\n  });\n}; */\n"]},"metadata":{},"sourceType":"module"}