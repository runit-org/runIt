{"ast":null,"code":"import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {\n  errors: {}\n};\nconst errorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        errors: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default errorReducer;","map":{"version":3,"names":["GET_ERRORS","initialState","errors","errorReducer","state","arguments","length","undefined","action","type","payload"],"sources":["/Users/Manan/Desktop/runIt/frontend/src/reducers/errorReducer.js"],"sourcesContent":["import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = { errors: {} };\n\nconst errorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        errors: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAE7C,MAAMC,YAAY,GAAG;EAAEC,MAAM,EAAE,CAAC;AAAE,CAAC;AAEnC,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKT,UAAU;MACb,OAAO;QACLE,MAAM,EAAEM,MAAM,CAACE;MACjB,CAAC;IAEH;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}