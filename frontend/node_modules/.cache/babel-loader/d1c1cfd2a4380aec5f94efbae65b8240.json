{"ast":null,"code":"var _jsxFileName = \"/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/components/CreatPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Row, Card, Form, FloatingLabel, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNewEvent } from \"../actions/eventActions\";\nimport ReactQuill from \"react-quill\";\nimport Loading from \"./Loading\";\nimport ErrorToast from \"./ErrorToast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState({});\n  const [maxMembers, setMaxMembers] = useState({});\n  const [details, setDetails] = useState({});\n  const [load, setLoad] = useState(false);\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const postData = {\n      title: title,\n      maxMember: maxMembers,\n      details: details\n    };\n    dispatch(createNewEvent(postData, setLoad, setShow, setError));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => {\n        handleSubmit(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n              controlId: \"floatingInput\",\n              label: \"Event Title\",\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"title\",\n                placeholder: \"Event Title\",\n                onChange: e => setTitle(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n              controlId: \"floatingInput2\",\n              label: \"Maximum Members\",\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Maximum Members\",\n                onChange: e => setMaxMembers(parseInt(e.target.value)),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: \"snow\",\n        value: details,\n        onChange: setDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centerContent align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mb-2 mt-3 w-100\",\n          children: (() => {\n            if (load) {\n              return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 24\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Post\"\n              }, void 0, false);\n            }\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePost, \"jCTywJqpZtK8P+M3ShN/mLGIyqw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/components/CreatPost.js"],"names":["React","useState","useEffect","Col","Row","Card","Form","FloatingLabel","Button","useDispatch","useSelector","createNewEvent","ReactQuill","Loading","ErrorToast","CreatePost","dispatch","title","setTitle","maxMembers","setMaxMembers","details","setDetails","load","setLoad","show","setShow","error","setError","handleSubmit","e","preventDefault","postData","maxMember","target","value","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Card, Form, FloatingLabel, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNewEvent } from \"../actions/eventActions\";\nimport ReactQuill from \"react-quill\";\nimport Loading from \"./Loading\";\nimport ErrorToast from \"./ErrorToast\";\n\nfunction CreatePost() {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState({});\n  const [maxMembers, setMaxMembers] = useState({});\n  const [details, setDetails] = useState({});\n  const [load, setLoad] = useState(false);\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const postData = {\n      title: title,\n      maxMember: maxMembers,\n      details: details,\n    };\n\n    dispatch(createNewEvent(postData, setLoad, setShow, setError));\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <Form\n        onSubmit={(e) => {\n          handleSubmit(e);\n        }}\n      >\n        <Row>\n          <Col>\n            <Form.Group className=\"mb-3\">\n              <FloatingLabel\n                controlId=\"floatingInput\"\n                label=\"Event Title\"\n                className=\"mb-3\"\n              >\n                <Form.Control\n                  type=\"title\"\n                  placeholder=\"Event Title\"\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                />\n              </FloatingLabel>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\">\n              <FloatingLabel\n                controlId=\"floatingInput2\"\n                label=\"Maximum Members\"\n                className=\"mb-3\"\n              >\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Maximum Members\"\n                  onChange={(e) => setMaxMembers(parseInt(e.target.value))}\n                  required\n                />\n              </FloatingLabel>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <ReactQuill theme=\"snow\" value={details} onChange={setDetails} />\n        <div className=\"centerContent align-items-center\">\n          <Button type=\"submit\" className=\"mb-2 mt-3 w-100\">\n            {(() => {\n              if (load) {\n                return <Loading />;\n              } else {\n                return <>Post</>;\n              }\n            })()}\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}