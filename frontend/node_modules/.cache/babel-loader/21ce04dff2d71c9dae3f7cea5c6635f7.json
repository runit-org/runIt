{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ALL_EVENTS, GET_ERRORS } from \"./types\";\nimport setToken from \"../securityUtils/setToken\";\nexport const getAllEvents = refToken => async dispatch => {\n  const ref = await axios.post(\"http://localhost:8000/api/auth/token/refresh/\", refToken).then(ref => {\n    console.log(ref.data.access);\n    setToken(ref.data.access);\n    const res = axios.get(`http://localhost:8000/api/event/all/`).then(res => {\n      dispatch({\n        type: GET_ALL_EVENTS,\n        payload: res.data\n      });\n    });\n  });\n  /* const res = await axios.get(`http://localhost:8000/api/event/all/`);\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: res.data,\n  }); */\n};\nexport const createNewEvent = (postData, setLoad, setShow, setError) => async dispatch => {\n  const ref = await axios.post(\"http://localhost:8000/api/auth/token/refresh/\", {\n    refresh: localStorage.getItem(\"token\")\n  }).then(ref => {\n    console.log(ref.data.access);\n    setToken(ref.data.access);\n\n    try {\n      setLoad(true);\n      const res = axios.post(\"http://localhost:8000/api/event/create/\", postData).then(res => {\n        console.log(res);\n\n        if (res.data.success == \"true\") {\n          setLoad(false);\n          setShow(true);\n          setError(res.data.message);\n          window.location.reload();\n        }\n\n        dispatch({\n          type: GET_ERRORS,\n          payload: res.data\n        });\n      });\n    } catch (error) {\n      setLoad(false);\n      setShow(true);\n      setError(error.response.data.message);\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    }\n  });\n  /*  try {\n  setLoad(true);\n  const res = await axios.post(\"http://localhost:8000/api/event/create/\", postData);\n  console.log(res)\n  if(res.data.success == \"true\"){\n    setLoad(false)\n    setShow(true)\n    setError(res.data.message);\n    window.location.reload();\n  }\n  dispatch({\n    type: GET_ERRORS,\n    payload: res.data,\n  });\n   } catch (error) {\n  setLoad(false);\n  setShow(true);\n  setError(error.response.data.message);\n  dispatch({\n    type: GET_ERRORS,\n    payload: error.response.data,\n  });\n  } */\n};","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/actions/eventActions.js"],"names":["axios","GET_ALL_EVENTS","GET_ERRORS","setToken","getAllEvents","refToken","dispatch","ref","post","then","console","log","data","access","res","get","type","payload","createNewEvent","postData","setLoad","setShow","setError","refresh","localStorage","getItem","success","message","window","location","reload","error","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,SAA3C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC5D,QAAMC,GAAG,GAAG,MAAMP,KAAK,CACpBQ,IADe,CACV,+CADU,EACuCH,QADvC,EAEfI,IAFe,CAETF,GAAD,IAAS;AACbG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,CAASC,MAArB;AACAV,IAAAA,QAAQ,CAACI,GAAG,CAACK,IAAJ,CAASC,MAAV,CAAR;AACA,UAAMC,GAAG,GAAGd,KAAK,CACde,GADS,CACJ,sCADI,EAETN,IAFS,CAEHK,GAAD,IAAS;AACbR,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAEf,cADC;AAEPgB,QAAAA,OAAO,EAAEH,GAAG,CAACF;AAFN,OAAD,CAAR;AAID,KAPS,CAAZ;AAQD,GAbe,CAAlB;AAeA;AACF;AACA;AACA;AACA;AACC,CArBM;AAuBP,OAAO,MAAMM,cAAc,GACzB,CAACC,QAAD,EAAWC,OAAX,EAAoBC,OAApB,EAA6BC,QAA7B,KAA0C,MAAOhB,QAAP,IAAoB;AAC5D,QAAMC,GAAG,GAAG,MAAMP,KAAK,CACpBQ,IADe,CACV,+CADU,EACuC;AACrDe,IAAAA,OAAO,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAD4C,GADvC,EAIfhB,IAJe,CAITF,GAAD,IAAS;AACbG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,CAASC,MAArB;AACAV,IAAAA,QAAQ,CAACI,GAAG,CAACK,IAAJ,CAASC,MAAV,CAAR;;AAEA,QAAI;AACFO,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,YAAMN,GAAG,GAAGd,KAAK,CACdQ,IADS,CACJ,yCADI,EACuCW,QADvC,EAETV,IAFS,CAEHK,GAAD,IAAS;AACbJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;;AACA,YAAIA,GAAG,CAACF,IAAJ,CAASc,OAAT,IAAoB,MAAxB,EAAgC;AAC9BN,UAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,UAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,UAAAA,QAAQ,CAACR,GAAG,CAACF,IAAJ,CAASe,OAAV,CAAR;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AACDxB,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAEd,UADC;AAEPe,UAAAA,OAAO,EAAEH,GAAG,CAACF;AAFN,SAAD,CAAR;AAID,OAdS,CAAZ;AAeD,KAjBD,CAiBE,OAAOmB,KAAP,EAAc;AACdX,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,MAAAA,QAAQ,CAACS,KAAK,CAACC,QAAN,CAAepB,IAAf,CAAoBe,OAArB,CAAR;AACArB,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAEd,UADC;AAEPe,QAAAA,OAAO,EAAEc,KAAK,CAACC,QAAN,CAAepB;AAFjB,OAAD,CAAR;AAID;AACF,GAlCe,CAAlB;AAoCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG,CA9DI","sourcesContent":["import axios from \"axios\";\nimport { GET_ALL_EVENTS, GET_ERRORS } from \"./types\";\nimport setToken from \"../securityUtils/setToken\";\n\nexport const getAllEvents = (refToken) => async (dispatch) => {\n  const ref = await axios\n    .post(\"http://localhost:8000/api/auth/token/refresh/\", refToken)\n    .then((ref) => {\n      console.log(ref.data.access);\n      setToken(ref.data.access);\n      const res = axios\n        .get(`http://localhost:8000/api/event/all/`)\n        .then((res) => {\n          dispatch({\n            type: GET_ALL_EVENTS,\n            payload: res.data,\n          });\n        });\n    });\n\n  /* const res = await axios.get(`http://localhost:8000/api/event/all/`);\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: res.data,\n  }); */\n};\n\nexport const createNewEvent =\n  (postData, setLoad, setShow, setError) => async (dispatch) => {\n    const ref = await axios\n      .post(\"http://localhost:8000/api/auth/token/refresh/\", {\n        refresh: localStorage.getItem(\"token\"),\n      })\n      .then((ref) => {\n        console.log(ref.data.access);\n        setToken(ref.data.access);\n\n        try {\n          setLoad(true);\n          const res = axios\n            .post(\"http://localhost:8000/api/event/create/\", postData)\n            .then((res) => {\n              console.log(res);\n              if (res.data.success == \"true\") {\n                setLoad(false);\n                setShow(true);\n                setError(res.data.message);\n                window.location.reload();\n              }\n              dispatch({\n                type: GET_ERRORS,\n                payload: res.data,\n              });\n            });\n        } catch (error) {\n          setLoad(false);\n          setShow(true);\n          setError(error.response.data.message);\n          dispatch({\n            type: GET_ERRORS,\n            payload: error.response.data,\n          });\n        }\n      });\n\n    /*  try {\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/event/create/\", postData);\n    console.log(res)\n    if(res.data.success == \"true\"){\n      setLoad(false)\n      setShow(true)\n      setError(res.data.message);\n      window.location.reload();\n    }\n    dispatch({\n      type: GET_ERRORS,\n      payload: res.data,\n    });\n  \n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.message);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  } */\n  };\n"]},"metadata":{},"sourceType":"module"}