{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ALL_EVENTS, GET_ERRORS } from \"./types\";\nexport const getAllEvents = () => async dispatch => {\n  const res = await axios.get(`http://localhost:8000/api/event/all/`);\n  console.log(res.data);\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: res.data\n  });\n};\nexport const createNewEvent = (postData, setLoad, setShow, setError) => async dispatch => {\n  try {\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/event/create/\", postData);\n    console.log(res);\n\n    if (res.data.success == \"true\") {\n      setLoad(false);\n      setShow(true);\n      setError(res.data.message);\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: res.data\n    });\n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.message);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/actions/eventActions.js"],"names":["axios","GET_ALL_EVENTS","GET_ERRORS","getAllEvents","dispatch","res","get","console","log","data","type","payload","createNewEvent","postData","setLoad","setShow","setError","post","success","message","error","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAA0BC,UAA1B,QAA4C,SAA5C;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpD,QAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,sCAAX,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAL,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAET,cADC;AAEPU,IAAAA,OAAO,EAAEN,GAAG,CAACI;AAFN,GAAD,CAAR;AAID,CAPM;AASP,OAAO,MAAMG,cAAc,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,OAApB,EAA6BC,QAA7B,KAA0C,MAAOZ,QAAP,IAAoB;AAC1F,MAAI;AACFU,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAMT,GAAG,GAAG,MAAML,KAAK,CAACiB,IAAN,CAAW,yCAAX,EAAsDJ,QAAtD,CAAlB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,QAAGA,GAAG,CAACI,IAAJ,CAASS,OAAT,IAAoB,MAAvB,EAA8B;AAC5BJ,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,MAAAA,QAAQ,CAACX,GAAG,CAACI,IAAJ,CAASU,OAAV,CAAR;AACD;;AACDf,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFN,KAAD,CAAR;AAKD,GAdD,CAcE,OAAOW,KAAP,EAAc;AACdN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,IAAAA,QAAQ,CAACI,KAAK,CAACC,QAAN,CAAeZ,IAAf,CAAoBU,OAArB,CAAR;AACAf,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAES,KAAK,CAACC,QAAN,CAAeZ;AAFjB,KAAD,CAAR;AAID;AACF,CAxBM","sourcesContent":["import axios from \"axios\";\nimport { GET_ALL_EVENTS,  GET_ERRORS } from \"./types\";\n\nexport const getAllEvents = () => async (dispatch) => {\n  const res = await axios.get(`http://localhost:8000/api/event/all/`);\n  console.log(res.data)\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: res.data,\n  });\n};\n\nexport const createNewEvent = (postData, setLoad, setShow, setError) => async (dispatch) => {\n  try {\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/event/create/\", postData);\n    console.log(res)\n    if(res.data.success == \"true\"){\n      setLoad(false)\n      setShow(true)\n      setError(res.data.message);\n    }\n    dispatch({\n      type: GET_ERRORS,\n      payload: res.data,\n    });\n  \n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.message);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}