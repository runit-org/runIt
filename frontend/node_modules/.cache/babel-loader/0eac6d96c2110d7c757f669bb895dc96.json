{"ast":null,"code":"import axios from \"axios\";\nimport { GET_USERS, GET_ERRORS, SET_CURRENT_USER, SET_NEW_USER } from \"./types\";\nimport setToken from \"../securityUtils/setToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const getUsers = () => async dispatch => {\n  const res = await axios.get(`http://localhost:8000/api/user/all/`); // console.log(res)\n\n  dispatch({\n    type: GET_USERS,\n    payload: res.data\n  });\n};\nexport const createNewUser = (userData, setLoad, setShow, setError) => async dispatch => {\n  try {\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/auth/register/\", userData);\n\n    if (res.data.success == \"true\") {\n      setLoad(false);\n      setShow(true);\n      setError(res.data.message);\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n    dispatch({\n      type: SET_NEW_USER,\n      payload: res.data\n    });\n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.message);\n    dispatch({\n      type: SET_NEW_USER,\n      payload: {}\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const login = (LoginRequest, navigate, setLoad, setShow, setError) => async dispatch => {\n  try {\n    //post => login request\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/auth/login/\", LoginRequest); // console.log(res);\n    //extract token from data\n\n    const refToken = res.data.refresh;\n    const accessToken = res.data.access; //store token in local storage\n\n    localStorage.setItem(\"token\", refToken); //set token in header\n\n    setToken(accessToken); //get data from response\n\n    const decoded = {\n      username: res.data.username\n    };\n    localStorage.setItem(\"username\", decoded.username);\n\n    if (localStorage.getItem(\"token\")) {\n      navigate(\"/posts\");\n    } //dispatch to securityReducer\n\n    /*  dispatch({\n       type: GET_ERRORS,\n       payload: {},\n     }); */\n\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.detail);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const accessToken = refToken => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:8000/api/auth/token/refresh/\", refToken); // setToken(res.refresh);\n    // const decoded_token = jwt_decode(res.refresh);\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n/* export const logout = (navigate) => async (dispatch) => {\n  const res = await axios.post(\"http://localhost:8000/api/auth/logout/\");\n  localStorage.clear();\n  setToken(false);\n  navigate(\"/\");\n  if (!localStorage.getItem(\"token\")) {\n    navigate(\"/\");\n  }\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: null,\n  });\n}; */\n\n/* export const getUser = () => async (dispatch) => {\n  const res = await axios.get(`http://localhost:8000/api/user/`);\n  dispatch({\n    type: GET_USER,\n    payload: res.data,\n  });\n}; */","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/actions/securityActions.js"],"names":["axios","GET_USERS","GET_ERRORS","SET_CURRENT_USER","SET_NEW_USER","setToken","jwt_decode","getUsers","dispatch","res","get","type","payload","data","createNewUser","userData","setLoad","setShow","setError","post","success","message","error","response","login","LoginRequest","navigate","refToken","refresh","accessToken","access","localStorage","setItem","decoded","username","getItem","detail"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { GET_USERS, GET_ERRORS, SET_CURRENT_USER, SET_NEW_USER} from \"./types\";\nimport setToken from \"../securityUtils/setToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const getUsers = () => async (dispatch) => {\n  const res = await axios.get(`http://localhost:8000/api/user/all/`);\n  // console.log(res)\n  dispatch({\n    type: GET_USERS,\n    payload: res.data,\n  });\n};\n\nexport const createNewUser = (userData, setLoad, setShow, setError) => async (dispatch) => {\n  try {\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/auth/register/\", userData);\n    \n    if(res.data.success == \"true\"){\n      setLoad(false)\n      setShow(true)\n      setError(res.data.message);\n    }\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n    dispatch({\n      type: SET_NEW_USER,\n      payload: res.data,\n    });\n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.message);\n    dispatch({\n      type: SET_NEW_USER,\n      payload: {},\n    });\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest, navigate, setLoad, setShow, setError) => async (dispatch) => {\n  try {\n    //post => login request\n    setLoad(true);\n    const res = await axios.post(\n      \"http://localhost:8000/api/auth/login/\",\n      LoginRequest\n    );\n    // console.log(res);\n\n    //extract token from data\n    const refToken = res.data.refresh;\n    const accessToken = res.data.access\n    //store token in local storage\n    localStorage.setItem(\"token\", refToken);\n    //set token in header\n    setToken(accessToken);\n    //get data from response\n    const decoded = {\n      username: res.data.username,\n    };\n\n    localStorage.setItem(\"username\", decoded.username);\n    if (localStorage.getItem(\"token\")) {\n      navigate(\"/posts\");\n    }\n\n    //dispatch to securityReducer\n   /*  dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    }); */\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.detail);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const accessToken = (refToken) => async (dispatch) => {\n  try{\n  const res = await axios.post(\"http://localhost:8000/api/auth/token/refresh/\", refToken);\n  \n  // setToken(res.refresh);\n  // const decoded_token = jwt_decode(res.refresh);\n  \n \n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n}catch(error){\n  dispatch({\n    type: GET_ERRORS,\n    payload: error.response.data,\n  });\n}\n}; \n\n/* export const logout = (navigate) => async (dispatch) => {\n  const res = await axios.post(\"http://localhost:8000/api/auth/logout/\");\n  localStorage.clear();\n  setToken(false);\n  navigate(\"/\");\n  if (!localStorage.getItem(\"token\")) {\n    navigate(\"/\");\n  }\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: null,\n  });\n}; */\n\n/* export const getUser = () => async (dispatch) => {\n  const res = await axios.get(`http://localhost:8000/api/user/`);\n  dispatch({\n    type: GET_USER,\n    payload: res.data,\n  });\n}; */\n"]},"metadata":{},"sourceType":"module"}