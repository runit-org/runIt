{"ast":null,"code":"var _jsxFileName = \"/Users/Manan/Desktop/runIt/frontend/src/components/Calendar/days.js\";\nimport React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Days(props) {\n  const firstDayOfMonth = new Date(props.day.getFullYear(), props.day.getMonth(), 1);\n  const indexOfFIrstDay = firstDayOfMonth.getDay();\n  let currentCalendarDays = [];\n\n  //sets the first day of the calendar\n  for (let calendarIndex = 0; calendarIndex < 42; calendarIndex++) {\n    if (calendarIndex === 0 && indexOfFIrstDay === 0) {\n      firstDayOfMonth.setDate(firstDayOfMonth.getDate() - 7);\n    } else if (calendarIndex === 0) {\n      firstDayOfMonth.setDate(firstDayOfMonth.getDate() + (calendarIndex - indexOfFIrstDay));\n    } else {\n      firstDayOfMonth.setDate(firstDayOfMonth.getDate() + 1);\n    }\n    let calendarDay = {\n      isCurrMonth: firstDayOfMonth.getMonth() === props.day.getMonth(),\n      fullDate: new Date(firstDayOfMonth),\n      month: firstDayOfMonth.getMonth(),\n      day: firstDayOfMonth.getDate(),\n      selected: firstDayOfMonth.toDateString() === props.day.toDateString(),\n      year: firstDayOfMonth.getFullYear()\n    };\n    currentCalendarDays.push(calendarDay);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentCalendarDays.map((days, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `day ${days.isCurrMonth ? `currMonth` : ``} ${days.selected ? `selectedDay` : ``}`,\n          onClick: () => props.changeCurrentDay(days),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: days.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), props.eventIndexes ? props.eventIndexes.map((data, index) => {\n            return data.day === days.day && props.currentMonth === days.month ? /*#__PURE__*/_jsxDEV(Badge, {\n              children: [data.count, \" Event(s)\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }, this) : \"\";\n          }) : null]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false)\n  }, void 0, false);\n}\n_c = Days;\nexport default Days;\nvar _c;\n$RefreshReg$(_c, \"Days\");","map":{"version":3,"names":["React","Badge","jsxDEV","_jsxDEV","Fragment","_Fragment","Days","props","firstDayOfMonth","Date","day","getFullYear","getMonth","indexOfFIrstDay","getDay","currentCalendarDays","calendarIndex","setDate","getDate","calendarDay","isCurrMonth","fullDate","month","selected","toDateString","year","push","children","map","days","index","className","onClick","changeCurrentDay","fileName","_jsxFileName","lineNumber","columnNumber","eventIndexes","data","currentMonth","count","_c","$RefreshReg$"],"sources":["/Users/Manan/Desktop/runIt/frontend/src/components/Calendar/days.js"],"sourcesContent":["import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nfunction Days(props) {\n  const firstDayOfMonth = new Date(\n    props.day.getFullYear(),\n    props.day.getMonth(),\n    1\n  );\n\n  const indexOfFIrstDay = firstDayOfMonth.getDay();\n\n  let currentCalendarDays = [];\n\n  //sets the first day of the calendar\n  for (let calendarIndex = 0; calendarIndex < 42; calendarIndex++) {\n    if (calendarIndex === 0 && indexOfFIrstDay === 0) {\n      firstDayOfMonth.setDate(firstDayOfMonth.getDate() - 7);\n    } else if (calendarIndex === 0) {\n      firstDayOfMonth.setDate(\n        firstDayOfMonth.getDate() + (calendarIndex - indexOfFIrstDay)\n      );\n    } else {\n      firstDayOfMonth.setDate(firstDayOfMonth.getDate() + 1);\n    }\n\n    let calendarDay = {\n      isCurrMonth: firstDayOfMonth.getMonth() === props.day.getMonth(),\n      fullDate: new Date(firstDayOfMonth),\n      month: firstDayOfMonth.getMonth(),\n      day: firstDayOfMonth.getDate(),\n      selected: firstDayOfMonth.toDateString() === props.day.toDateString(),\n      year: firstDayOfMonth.getFullYear(),\n    };\n\n    currentCalendarDays.push(calendarDay);\n  }\n\n  return (\n    <>\n      {/*   <div className=\"calendar-days\">\n        {currentCalendarDays.map((days, index) => {\n          return (\n            <div\n              key={index}\n              className={`day ${days.isCurrMonth ? `currMonth` : ``} ${\n                days.selected ? `selectedDay` : ``\n              }`}\n              onClick={() => props.changeCurrentDay(days)}\n            >\n              <p>{days.day}</p>\n\n              {props.eventIndexes\n                ? props.eventIndexes.map((data, index) => {\n                    return data.day === days.day &&\n                      props.currentMonth === days.month ? (\n                      <Badge key={index}>{data.count} Event(s)</Badge>\n                    ) : (\n                      \"\"\n                    );\n                  })\n                : null}\n            </div>\n          );\n        })}\n      </div> */}\n\n      <>\n        {currentCalendarDays.map((days, index) => {\n          return (\n            <tr\n              key={index}\n              className={`day ${days.isCurrMonth ? `currMonth` : ``} ${\n                days.selected ? `selectedDay` : ``\n              }`}\n              onClick={() => props.changeCurrentDay(days)}\n            >\n              <p>{days.day}</p>\n\n              {props.eventIndexes\n                ? props.eventIndexes.map((data, index) => {\n                    return data.day === days.day &&\n                      props.currentMonth === days.month ? (\n                      <Badge key={index}>{data.count} Event(s)</Badge>\n                    ) : (\n                      \"\"\n                    );\n                  })\n                : null}\n            </tr>\n          );\n        })}\n      </>\n    </>\n  );\n}\n\nexport default Days;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,IAAIA,CAACC,KAAK,EAAE;EACnB,MAAMC,eAAe,GAAG,IAAIC,IAAI,CAC9BF,KAAK,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,EACvBJ,KAAK,CAACG,GAAG,CAACE,QAAQ,CAAC,CAAC,EACpB,CACF,CAAC;EAED,MAAMC,eAAe,GAAGL,eAAe,CAACM,MAAM,CAAC,CAAC;EAEhD,IAAIC,mBAAmB,GAAG,EAAE;;EAE5B;EACA,KAAK,IAAIC,aAAa,GAAG,CAAC,EAAEA,aAAa,GAAG,EAAE,EAAEA,aAAa,EAAE,EAAE;IAC/D,IAAIA,aAAa,KAAK,CAAC,IAAIH,eAAe,KAAK,CAAC,EAAE;MAChDL,eAAe,CAACS,OAAO,CAACT,eAAe,CAACU,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACxD,CAAC,MAAM,IAAIF,aAAa,KAAK,CAAC,EAAE;MAC9BR,eAAe,CAACS,OAAO,CACrBT,eAAe,CAACU,OAAO,CAAC,CAAC,IAAIF,aAAa,GAAGH,eAAe,CAC9D,CAAC;IACH,CAAC,MAAM;MACLL,eAAe,CAACS,OAAO,CAACT,eAAe,CAACU,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACxD;IAEA,IAAIC,WAAW,GAAG;MAChBC,WAAW,EAAEZ,eAAe,CAACI,QAAQ,CAAC,CAAC,KAAKL,KAAK,CAACG,GAAG,CAACE,QAAQ,CAAC,CAAC;MAChES,QAAQ,EAAE,IAAIZ,IAAI,CAACD,eAAe,CAAC;MACnCc,KAAK,EAAEd,eAAe,CAACI,QAAQ,CAAC,CAAC;MACjCF,GAAG,EAAEF,eAAe,CAACU,OAAO,CAAC,CAAC;MAC9BK,QAAQ,EAAEf,eAAe,CAACgB,YAAY,CAAC,CAAC,KAAKjB,KAAK,CAACG,GAAG,CAACc,YAAY,CAAC,CAAC;MACrEC,IAAI,EAAEjB,eAAe,CAACG,WAAW,CAAC;IACpC,CAAC;IAEDI,mBAAmB,CAACW,IAAI,CAACP,WAAW,CAAC;EACvC;EAEA,oBACEhB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eA4BExB,OAAA,CAAAE,SAAA;MAAAsB,QAAA,EACGZ,mBAAmB,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACxC,oBACE3B,OAAA;UAEE4B,SAAS,EAAG,OAAMF,IAAI,CAACT,WAAW,GAAI,WAAU,GAAI,EAAE,IACpDS,IAAI,CAACN,QAAQ,GAAI,aAAY,GAAI,EAClC,EAAE;UACHS,OAAO,EAAEA,CAAA,KAAMzB,KAAK,CAAC0B,gBAAgB,CAACJ,IAAI,CAAE;UAAAF,QAAA,gBAE5CxB,OAAA;YAAAwB,QAAA,EAAIE,IAAI,CAACnB;UAAG;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAEhB9B,KAAK,CAAC+B,YAAY,GACf/B,KAAK,CAAC+B,YAAY,CAACV,GAAG,CAAC,CAACW,IAAI,EAAET,KAAK,KAAK;YACtC,OAAOS,IAAI,CAAC7B,GAAG,KAAKmB,IAAI,CAACnB,GAAG,IAC1BH,KAAK,CAACiC,YAAY,KAAKX,IAAI,CAACP,KAAK,gBACjCnB,OAAA,CAACF,KAAK;cAAA0B,QAAA,GAAcY,IAAI,CAACE,KAAK,EAAC,WAAS;YAAA,GAA5BX,KAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA8B,CAAC,GAEhD,EACD;UACH,CAAC,CAAC,GACF,IAAI;QAAA,GAjBHP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBR,CAAC;MAET,CAAC;IAAC,gBACF;EAAC,gBACH,CAAC;AAEP;AAACK,EAAA,GA5FQpC,IAAI;AA8Fb,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}