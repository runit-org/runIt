{"ast":null,"code":"var _jsxFileName = \"/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/src/components/MainDash.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Row, Card } from \"react-bootstrap\";\nimport PostItem from \"./Event/EventItem\";\nimport SideNav from \"./SiteElements/SideNav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllEvents } from \"../actions/eventActions\";\nimport CreatePost from \"./Event/CreateEvent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainDash() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [eventData, setEventData] = useState([]);\n  useEffect(() => {\n    dispatch(getAllEvents());\n  }, []);\n  var allEventsData = useSelector(eventReducer => eventReducer.events.data);\n  useEffect(() => {\n    setEventData(allEventsData);\n  }, [allEventsData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"post-cards\",\n        children: eventData.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(PostItem, {\n            eventTitle: event.title,\n            eventDetails: event.details,\n            postedBy: event.userName,\n            createdTime: event.humanTimeDiffCreatedAt,\n            eventId: event.id,\n            userId: event.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 3,\n        className: \"post-cards recents\",\n        children: [/*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"text-muted mb-4\",\n              children: \"Recents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), eventData.length > 4 ? eventData.slice(Math.max(eventData.length - 4, 0)).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(SideNav, {\n                eventTitle: event.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this)\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 23\n            }, this)) : eventData.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(SideNav, {\n                eventTitle: event.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 23\n              }, this)\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"text-muted mb-4\",\n              children: \"Your Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), eventData.filter(eventData => eventData.userName == localStorage.username).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(SideNav, {\n                eventTitle: event.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainDash, \"kWl6HYdDS/HTtGOIj7eu51/Z7YA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MainDash;\nexport default MainDash;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDash\");","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/src/components/MainDash.js"],"names":["React","useState","useEffect","Col","Row","Card","PostItem","SideNav","useDispatch","useSelector","getAllEvents","CreatePost","MainDash","dispatch","eventData","setEventData","allEventsData","eventReducer","events","data","map","event","title","details","userName","humanTimeDiffCreatedAt","id","user","length","slice","Math","max","filter","localStorage","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Card } from \"react-bootstrap\";\nimport PostItem from \"./Event/EventItem\";\nimport SideNav from \"./SiteElements/SideNav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllEvents } from \"../actions/eventActions\";\nimport CreatePost from \"./Event/CreateEvent\";\n\nfunction MainDash() {\n  const dispatch = useDispatch();\n  const [eventData, setEventData] = useState([]);\n\n  useEffect(() => {\n    dispatch(getAllEvents());\n  }, []);\n\n  var allEventsData = useSelector((eventReducer) => eventReducer.events.data);\n  useEffect(() => {\n    setEventData(allEventsData);\n  }, [allEventsData]);\n\n  return (\n    <div className=\"content\">\n      {/* <Row className=\"row justify-content-center\">Event Data</Row> */}\n\n      <Row>\n        <Col className=\"post-cards\">\n          {eventData.map((event) => (\n            <div key={event.id}>\n              <PostItem\n                eventTitle={event.title}\n                eventDetails={event.details}\n                postedBy={event.userName}\n                createdTime={event.humanTimeDiffCreatedAt}\n                eventId={event.id}\n                userId={event.user}\n              />\n            </div>\n          ))}\n        </Col>\n\n        <Col sm={3} className=\"post-cards recents\">\n        <CreatePost />\n          <Card>\n            <Card.Body>\n              <Card.Title className=\"text-muted mb-4\">Recents</Card.Title>\n              {eventData.length > 4\n                ? eventData\n                    .slice(Math.max(eventData.length - 4, 0))\n                    .map((event) => (\n                      <div className=\"mb-3\" key={event.id}>\n                        <SideNav eventTitle={event.title} />\n                      </div>\n                    ))\n                : eventData.map((event) => (\n                    <div className=\"mb-3\" key={event.id}>\n                      <SideNav eventTitle={event.title} />\n                    </div>\n                  ))}\n              {/* {eventData.map((event) => (\n                <div className=\"mb-3\" key={event.id}>\n                  <SideNav eventTitle={event.title} />\n                </div>\n              ))} */}\n            </Card.Body>\n          </Card>\n\n          <Card className=\"mt-4\">\n            <Card.Body>\n              <Card.Title className=\"text-muted mb-4\">Your Events</Card.Title>\n              {eventData\n                .filter(\n                  (eventData) => eventData.userName == localStorage.username\n                )\n                .map((event) => (\n                  <div className=\"mb-3\" key={event.id}>\n                    <SideNav eventTitle={event.title} />\n                  </div>\n                ))}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default MainDash;\n"]},"metadata":{},"sourceType":"module"}