{"ast":null,"code":"var _jsxFileName = \"/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/src/components/Event/EventMembers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Form, Button, Container, Modal } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { getEventMembers, memberStatus } from \"../../actions/eventActions\";\nimport Loading from \"../SiteElements/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EventMembers(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [members, setMembers] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [postData, setPostData] = useState({});\n  useEffect(() => {\n    if (modalShow) {\n      console.log(props.eventId);\n      dispatch(getEventMembers(props.eventId, setMembers));\n    }\n  }, [modalShow]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(postData);\n    /* const postData = {\n        eventId: props.eventId,\n        userId: members.userId,\n        status: 2,\n    };\n    */\n\n    dispatch(memberStatus(postData, setLoad));\n  };\n\n  console.log(members.userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setModalShow(true),\n      children: \"Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"md\",\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-lg\",\n          children: \"All members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            handleSubmit(e);\n          },\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"new-post-container p-3\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"User Id: \", member.userId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: \"mb-2 mt-3 w-25\",\n                  onChange: e => {\n                    setPostData({\n                      eventId: props.eventId,\n                      userId: member.userId,\n                      status: 2\n                    });\n                  },\n                  children: (() => {\n                    if (load) {\n                      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 34\n                      }, this);\n                    } else {\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: \"Accept\"\n                      }, void 0, false);\n                    }\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)]\n              }, member.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventMembers, \"ONkPz4BHrvN1leHuAvZqKP5okmU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EventMembers;\nexport default EventMembers;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventMembers\");","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/src/components/Event/EventMembers.js"],"names":["React","useState","useEffect","Row","Form","Button","Container","Modal","useDispatch","getEventMembers","memberStatus","Loading","EventMembers","props","dispatch","members","setMembers","load","setLoad","modalShow","setModalShow","postData","setPostData","console","log","eventId","handleSubmit","e","preventDefault","userId","map","member","status","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Form, Button, Container, Modal } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { getEventMembers, memberStatus } from \"../../actions/eventActions\";\nimport Loading from \"../SiteElements/Loading\";\n\nfunction EventMembers(props) {\n  const dispatch = useDispatch();\n  const [members, setMembers] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [postData, setPostData] = useState({});\n\n  useEffect(() => {\n    if (modalShow) {\n      console.log(props.eventId);\n\n      dispatch(getEventMembers(props.eventId, setMembers));\n    }\n  }, [modalShow]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(postData)\n    /* const postData = {\n        eventId: props.eventId,\n        userId: members.userId,\n        status: 2,\n    };\n */\n    dispatch(memberStatus(postData, setLoad));\n  };\n\n  console.log(members.userId);\n  return (\n    <div className=\"mb-4\">\n      <Button onClick={() => setModalShow(true)}>Members</Button>\n\n      <Modal\n        size=\"md\"\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        aria-labelledby=\"example-modal-sizes-title-lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\n            All members\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form\n            onSubmit={(e) => {\n              handleSubmit(e);\n            }}\n          >\n            <Container className=\"new-post-container p-3\">\n              <Row>\n                {members.map((member) => (\n                  <div key={member.id}>\n                    <p>User Id: {member.userId}</p>\n                    <Button\n                      type=\"submit\"\n                      className=\"mb-2 mt-3 w-25\"\n                      onChange={(e) => {\n                        setPostData({\n                          eventId: props.eventId,\n                          userId: member.userId,\n                          status: 2,\n                        });\n                      }}\n                    >\n                      {(() => {\n                        if (load) {\n                          return <Loading />;\n                        } else {\n                          return <>Accept</>;\n                        }\n                      })()}\n                    </Button>\n                  </div>\n                ))}\n              </Row>\n\n              <div className=\"d-flex justify-content-center\"></div>\n            </Container>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default EventMembers;\n"]},"metadata":{},"sourceType":"module"}