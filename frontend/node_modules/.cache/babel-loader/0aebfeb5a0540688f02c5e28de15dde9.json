{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ALL_EVENTS, GET_ERRORS } from \"./types\";\nimport { setToken, refreshToken } from \"../securityUtils/setToken\";\n/* const client = axios.create({\n  baseURL: \"http://localhost:8000/api/event\",\n}); */\n\nexport const getAllEvents = () => async dispatch => {\n  const ref = await refreshToken().then(ref => {\n    //console.log(ref.data.access);\n    setToken(ref.data.access);\n    const res = axios.get(`http://localhost:8000/api/event/all/`).then(res => {\n      dispatch({\n        type: GET_ALL_EVENTS,\n        payload: res.data\n      });\n    });\n  });\n};\nexport const createNewEvent = (postData, setLoad, setError) => async dispatch => {\n  const ref = await refreshToken().then(ref => {\n    //console.log(ref.data.access);\n    setToken(ref.data.access);\n    setLoad(true);\n    const res = axios.post(\"http://localhost:8000/api/event/create/\", postData).then(res => {\n      //console.log(res);\n      if (res.data.success == \"true\") {\n        setLoad(false);\n        setError(res.data.message);\n        window.location.reload();\n      }\n\n      dispatch({\n        type: GET_ERRORS,\n        payload: res.data\n      });\n    }).catch(error => {\n      setLoad(false);\n      setError(error.response.data.message);\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n  });\n};\nexport const requestToJoin = (postData, setLoad, setError) => async dispatch => {\n  const ref = await refreshToken().then(ref => {\n    console.log(ref.data.access);\n    setToken(ref.data.access);\n    setLoad(true);\n    const res = axios.post(\"http://localhost:8000/api/event/member/requestJoin/\", postData).then(res => {\n      console.log(res);\n\n      if (res.data.success == \"true\") {\n        setLoad(false);\n        setError(res.data.message);\n        window.location.reload();\n      }\n\n      dispatch({\n        type: GET_ERRORS,\n        payload: res.data\n      });\n    }).catch(error => {\n      setLoad(false);\n      console.log(error.response.data.message);\n      setError(error.response.data.message);\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n  });\n};\nexport const getEventMembers = (id, setMembers) => async dispatch => {\n  const ref = await refreshToken().then(ref => {\n    setToken(ref.data.access);\n    const res = axios.get(`http://localhost:8000/api/event/member/getMembers/${id}/`).then(res => {\n      setMembers(res.data.data);\n    });\n  });\n};\nexport const memberStatus = (postData, setLoad) => async dispatch => {\n  const ref = await refreshToken().then(ref => {\n    setToken(ref.data.access);\n    setLoad(true);\n    const res = axios.post(\"http://localhost:8000/api/event/member/changeStatus/\", postData).then(res => {\n      console.log(res);\n\n      if (res.data.success == \"true\") {\n        setLoad(false);\n      }\n\n      dispatch({\n        type: GET_ERRORS,\n        payload: res.data\n      });\n    }).catch(error => {\n      setLoad(false);\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/src/actions/eventActions.js"],"names":["axios","GET_ALL_EVENTS","GET_ERRORS","setToken","refreshToken","getAllEvents","dispatch","ref","then","data","access","res","get","type","payload","createNewEvent","postData","setLoad","setError","post","success","message","window","location","reload","catch","error","response","requestToJoin","console","log","getEventMembers","id","setMembers","memberStatus"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { GET_ALL_EVENTS, GET_ERRORS } from \"./types\";\nimport { setToken, refreshToken } from \"../securityUtils/setToken\";\n\n/* const client = axios.create({\n  baseURL: \"http://localhost:8000/api/event\",\n}); */\n\nexport const getAllEvents = () => async (dispatch) => {\n  const ref = await refreshToken().then((ref) => {\n    //console.log(ref.data.access);\n    setToken(ref.data.access);\n    const res = axios\n      .get(`http://localhost:8000/api/event/all/`)\n      .then((res) => {\n        dispatch({\n          type: GET_ALL_EVENTS,\n          payload: res.data,\n        });\n      });\n  });\n};\n\nexport const createNewEvent =\n  (postData, setLoad, setError) => async (dispatch) => {\n    const ref = await refreshToken().then((ref) => {\n      //console.log(ref.data.access);\n      setToken(ref.data.access);\n\n      setLoad(true);\n      const res = axios\n        .post(\"http://localhost:8000/api/event/create/\", postData)\n        .then((res) => {\n          //console.log(res);\n          if (res.data.success == \"true\") {\n            setLoad(false);\n            setError(res.data.message);\n            window.location.reload();\n          }\n          dispatch({\n            type: GET_ERRORS,\n            payload: res.data,\n          });\n        })\n        .catch((error) => {\n          setLoad(false);\n\n          setError(error.response.data.message);\n          dispatch({\n            type: GET_ERRORS,\n            payload: error.response.data,\n          });\n        });\n    });\n  };\n\nexport const requestToJoin =\n  (postData, setLoad, setError) => async (dispatch) => {\n    const ref = await refreshToken().then((ref) => {\n      console.log(ref.data.access);\n      setToken(ref.data.access);\n\n      setLoad(true);\n      const res = axios\n        .post(\"http://localhost:8000/api/event/member/requestJoin/\", postData)\n        .then((res) => {\n          console.log(res);\n          if (res.data.success == \"true\") {\n            setLoad(false);\n            setError(res.data.message);\n            window.location.reload();\n          }\n          dispatch({\n            type: GET_ERRORS,\n            payload: res.data,\n          });\n        })\n        .catch((error) => {\n          setLoad(false);\n          console.log(error.response.data.message);\n          setError(error.response.data.message);\n          dispatch({\n            type: GET_ERRORS,\n            payload: error.response.data,\n          });\n        });\n    });\n  };\n\nexport const getEventMembers = (id, setMembers) => async (dispatch) => {\n  const ref = await refreshToken().then((ref) => {\n    setToken(ref.data.access);\n    const res = axios\n      .get(`http://localhost:8000/api/event/member/getMembers/${id}/`)\n      .then((res) => {\n        setMembers(res.data.data);\n      });\n  });\n};\n\nexport const memberStatus = (postData, setLoad) => async (dispatch) => {\n  const ref = await refreshToken().then((ref) => {\n    setToken(ref.data.access);\n    setLoad(true);\n    const res = axios\n      .post(\"http://localhost:8000/api/event/member/changeStatus/\", postData)\n      .then((res) => {\n        console.log(res)\n        if (res.data.success == \"true\") {\n          setLoad(false);\n        }\n\n        dispatch({\n          type: GET_ERRORS,\n          payload: res.data,\n        });\n      })\n      .catch((error) => {\n        setLoad(false);\n        dispatch({\n          type: GET_ERRORS,\n          payload: error.response.data,\n        });\n      });\n  });\n};\n"]},"metadata":{},"sourceType":"module"}