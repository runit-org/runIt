{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ALL_EVENTS, GET_ERRORS } from \"./types\";\nimport { setToken, refreshToken } from \"../securityUtils/setToken\";\nexport const getAllEvents = () => async dispatch => {\n  /* const ref = await axios\n    .post(\"http://localhost:8000/api/auth/token/refresh/\", {\n      refresh: localStorage.getItem(\"token\"),\n    }) */\n  const ref = await refreshToken().then(ref => {\n    console.log(ref.data.access);\n    setToken(ref.data.access);\n    const res = axios.get(`http://localhost:8000/api/event/all/`).then(res => {\n      dispatch({\n        type: GET_ALL_EVENTS,\n        payload: res.data\n      });\n    });\n  });\n  /* const res = await axios.get(`http://localhost:8000/api/event/all/`);\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: res.data,\n  }); */\n};\nexport const createNewEvent = (postData, setLoad, setError) => async dispatch => {\n  /* const ref = await axios\n    .post(\"http://localhost:8000/api/auth/token/refresh/\", {\n      refresh: localStorage.getItem(\"token\"),\n    }) */\n  const ref = await refreshToken().then(ref => {\n    console.log(ref.data.access);\n    setToken(ref.data.access);\n    setLoad(true);\n    const res = axios.post(\"http://localhost:8000/api/event/create/\", postData).then(res => {\n      console.log(res);\n\n      if (res.data.success == \"true\") {\n        setLoad(false);\n        setError(res.data.message);\n        window.location.reload();\n      }\n\n      dispatch({\n        type: GET_ERRORS,\n        payload: res.data\n      });\n    }).catch(error => {\n      setLoad(false);\n      setError(error.response.data.message);\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n  });\n  /*  try {\n  setLoad(true);\n  const res = await axios.post(\"http://localhost:8000/api/event/create/\", postData);\n  console.log(res)\n  if(res.data.success == \"true\"){\n    setLoad(false)\n    setShow(true)\n    setError(res.data.message);\n    window.location.reload();\n  }\n  dispatch({\n    type: GET_ERRORS,\n    payload: res.data,\n  });\n   } catch (error) {\n  setLoad(false);\n  setShow(true);\n  setError(error.response.data.message);\n  dispatch({\n    type: GET_ERRORS,\n    payload: error.response.data,\n  });\n  } */\n};\nexport const requestToJoin = (postData, setLoad, setError) => async dispatch => {\n  const ref = await refreshToken().then(ref => {\n    console.log(ref.data.access);\n    setToken(ref.data.access);\n    setLoad(true);\n    const res = axios.post(\"http://localhost:8000/api/event/member/requestJoin/\", postData).then(res => {\n      console.log(res);\n\n      if (res.data.success == \"true\") {\n        setLoad(false);\n        setError(res.data.message);\n        window.location.reload();\n      }\n\n      dispatch({\n        type: GET_ERRORS,\n        payload: res.data\n      });\n    }).catch(error => {\n      setLoad(false);\n      setError(error.response.data.message);\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/actions/eventActions.js"],"names":["axios","GET_ALL_EVENTS","GET_ERRORS","setToken","refreshToken","getAllEvents","dispatch","ref","then","console","log","data","access","res","get","type","payload","createNewEvent","postData","setLoad","setError","post","success","message","window","location","reload","catch","error","response","requestToJoin"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { GET_ALL_EVENTS, GET_ERRORS } from \"./types\";\nimport { setToken, refreshToken } from \"../securityUtils/setToken\";\n\nexport const getAllEvents = () => async (dispatch) => {\n  /* const ref = await axios\n    .post(\"http://localhost:8000/api/auth/token/refresh/\", {\n      refresh: localStorage.getItem(\"token\"),\n    }) */\n  const ref = await refreshToken().then((ref) => {\n    console.log(ref.data.access);\n    setToken(ref.data.access);\n    const res = axios\n      .get(`http://localhost:8000/api/event/all/`)\n      .then((res) => {\n        dispatch({\n          type: GET_ALL_EVENTS,\n          payload: res.data,\n        });\n      });\n  });\n\n  /* const res = await axios.get(`http://localhost:8000/api/event/all/`);\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: res.data,\n  }); */\n};\n\nexport const createNewEvent =\n  (postData, setLoad, setError) => async (dispatch) => {\n    /* const ref = await axios\n      .post(\"http://localhost:8000/api/auth/token/refresh/\", {\n        refresh: localStorage.getItem(\"token\"),\n      }) */\n    const ref = await refreshToken().then((ref) => {\n      console.log(ref.data.access);\n      setToken(ref.data.access);\n\n      setLoad(true);\n      const res = axios\n        .post(\"http://localhost:8000/api/event/create/\", postData)\n        .then((res) => {\n          console.log(res);\n          if (res.data.success == \"true\") {\n            setLoad(false);\n            setError(res.data.message);\n            window.location.reload();\n          }\n          dispatch({\n            type: GET_ERRORS,\n            payload: res.data,\n          });\n        })\n        .catch((error) => {\n          setLoad(false);\n\n          setError(error.response.data.message);\n          dispatch({\n            type: GET_ERRORS,\n            payload: error.response.data,\n          });\n        });\n    });\n\n    /*  try {\n    setLoad(true);\n    const res = await axios.post(\"http://localhost:8000/api/event/create/\", postData);\n    console.log(res)\n    if(res.data.success == \"true\"){\n      setLoad(false)\n      setShow(true)\n      setError(res.data.message);\n      window.location.reload();\n    }\n    dispatch({\n      type: GET_ERRORS,\n      payload: res.data,\n    });\n  \n  } catch (error) {\n    setLoad(false);\n    setShow(true);\n    setError(error.response.data.message);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  } */\n  };\n\nexport const requestToJoin =\n  (postData, setLoad, setError) => async (dispatch) => {\n    const ref = await refreshToken().then((ref) => {\n      console.log(ref.data.access);\n      setToken(ref.data.access);\n\n      setLoad(true);\n      const res = axios\n        .post(\"http://localhost:8000/api/event/member/requestJoin/\", postData)\n        .then((res) => {\n          console.log(res);\n          if (res.data.success == \"true\") {\n            setLoad(false);\n            setError(res.data.message);\n            window.location.reload();\n          }\n          dispatch({\n            type: GET_ERRORS,\n            payload: res.data,\n          });\n        })\n        .catch((error) => {\n          setLoad(false);\n\n          setError(error.response.data.message);\n          dispatch({\n            type: GET_ERRORS,\n            payload: error.response.data,\n          });\n        });\n    });\n  };\n"]},"metadata":{},"sourceType":"module"}