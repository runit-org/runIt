{"ast":null,"code":"import axios from \"axios\";\nimport { isExpired } from \"react-jwt\";\n\nconst setToken = token => async () => {\n  const isMyTokenExpired = isExpired(token);\n\n  if (token && isMyTokenExpired) {\n    console.log(\"one\");\n    const refToken = {\n      refresh: localStorage.token\n    };\n    const res = await axios.post(\"http://localhost:8000/api/auth/token/refresh/\", refToken);\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + res.data.access;\n  } else if (token && !isMyTokenExpired) {\n    console.log(\"two\");\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setToken;","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/securityUtils/setToken.js"],"names":["axios","isExpired","setToken","token","isMyTokenExpired","console","log","refToken","refresh","localStorage","res","post","defaults","headers","common","data","access"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW,YAAW;AACrC,QAAMC,gBAAgB,GAAGH,SAAS,CAACE,KAAD,CAAlC;;AACA,MAAIA,KAAK,IAAIC,gBAAb,EAA+B;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,OAAO,EAAEC,YAAY,CAACN;AADP,KAAjB;AAGA,UAAMO,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAChB,+CADgB,EAEhBJ,QAFgB,CAAlB;AAIAP,IAAAA,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IACE,YAAYJ,GAAG,CAACK,IAAJ,CAASC,MADvB;AAED,GAXD,MAWO,IAAIb,KAAK,IAAI,CAACC,gBAAd,EAAgC;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAN,IAAAA,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAYX,KAA7D;AACD,GAHM,MAGA;AACL,WAAOH,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACD;AACF,CAnBD;;AAqBA,eAAeZ,QAAf","sourcesContent":["import axios from \"axios\";\nimport { isExpired } from \"react-jwt\";\n\nconst setToken = (token) => async ()=> {\n  const isMyTokenExpired = isExpired(token);\n  if (token && isMyTokenExpired) {\n    console.log(\"one\")\n    const refToken = {\n      refresh: localStorage.token,\n    };\n    const res = await axios.post(\n      \"http://localhost:8000/api/auth/token/refresh/\",\n      refToken\n    );\n    axios.defaults.headers.common[\"Authorization\"] =\n      \"Bearer \" + res.data.access;\n  } else if (token && !isMyTokenExpired) {\n    console.log(\"two\")\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setToken;\n"]},"metadata":{},"sourceType":"module"}