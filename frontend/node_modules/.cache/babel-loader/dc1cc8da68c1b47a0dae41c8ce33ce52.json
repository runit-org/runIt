{"ast":null,"code":"import { SET_CURRENT_USER, GET_USERS, GET_USER } from \"../actions/types\";\nconst initialState = {\n  user: {},\n  users: {},\n  data: [],\n  validToken: false\n};\n\nconst booleanPayload = payload => {\n  if (payload) {\n    console.log(\"valid\");\n    return true;\n  } else {\n    console.log(\"invalid\");\n    return false;\n  }\n};\n\nexport default function setUser() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state,\n        validToken: booleanPayload(action.payload),\n        user: action.payload\n      };\n\n    case GET_USERS:\n      return { ...state,\n        users: action.payload,\n        data: action.payload.data\n      };\n\n    case GET_USER:\n      return { ...state,\n        singleUser: action.payload,\n        userData: action.payload.data\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/reducers/securityReducer.js"],"names":["SET_CURRENT_USER","GET_USERS","GET_USER","initialState","user","users","data","validToken","booleanPayload","payload","console","log","setUser","state","action","type","singleUser","userData"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,SAA3B,EAAsCC,QAAtC,QACO,kBADP;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;;AAOA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAClC,MAAIA,OAAJ,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAO,IAAP;AACD,GAHD,MAGO;AACLD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAO,KAAP;AACD;AACF,CARD;;AAUA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBV,YAAsB;AAAA,MAARW,MAAQ;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,gBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELN,QAAAA,UAAU,EAAEC,cAAc,CAACM,MAAM,CAACL,OAAR,CAFrB;AAGLL,QAAAA,IAAI,EAAEU,MAAM,CAACL;AAHR,OAAP;;AAKF,SAAKR,SAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELR,QAAAA,KAAK,EAAES,MAAM,CAACL,OAFT;AAGLH,QAAAA,IAAI,EAAEQ,MAAM,CAACL,OAAP,CAAeH;AAHhB,OAAP;;AAKF,SAAKJ,QAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELG,QAAAA,UAAU,EAAEF,MAAM,CAACL,OAFd;AAGLQ,QAAAA,QAAQ,EAAEH,MAAM,CAACL,OAAP,CAAeH;AAHpB,OAAP;;AAMF;AACE,aAAOO,KAAP;AArBJ;AAuBD","sourcesContent":["import { SET_CURRENT_USER, GET_USERS, GET_USER,\n} from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  users: {},\n  data: [],\n  validToken: false,\n};\n\nconst booleanPayload = (payload) => {\n  if (payload) {\n    console.log(\"valid\")\n    return true;\n  } else {\n    console.log(\"invalid\")\n    return false;\n  }\n};\n\nexport default function setUser(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanPayload(action.payload),\n        user: action.payload,\n      };\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        data: action.payload.data,\n      };\n    case GET_USER:\n      return {\n        ...state,\n        singleUser: action.payload,\n        userData: action.payload.data,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}