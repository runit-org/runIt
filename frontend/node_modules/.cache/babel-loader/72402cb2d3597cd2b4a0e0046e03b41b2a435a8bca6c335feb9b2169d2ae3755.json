{"ast":null,"code":"var _jsxFileName = \"/Users/Manan/Desktop/runIt/frontend/src/components/Calendar/calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { ChevronLeft, ChevronRight } from \"../SiteElements/icons\";\nimport Days from \"./days\";\nimport { DayEventsHandler, MonthlyEventsHandler } from \"./utilities/action-handler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar(props) {\n  _s();\n  // eslint-disable-next-line no-unused-vars\n  const [days, setDays] = useState([\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]);\n\n  // eslint-disable-next-line no-unused-vars\n  const [months, setMonths] = useState([\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]);\n  const [currentDay, setCurrentDay] = useState(new Date());\n  const changeCurrentDay = day => {\n    setCurrentDay(new Date(day.year, day.month, day.day));\n  };\n  const nextMonth = () => {\n    setCurrentDay(new Date(currentDay.setMonth(currentDay.getMonth() + 1)));\n  };\n  const prevMonth = () => {\n    setCurrentDay(new Date(currentDay.setMonth(currentDay.getMonth() - 1)));\n  };\n  const monthlyEvents = MonthlyEventsHandler(props.userId, currentDay.getMonth() + 1, currentDay.getFullYear());\n  if (monthlyEvents) {\n    var indexes = [];\n    for (var i = 0; i < monthlyEvents.length; i++) {\n      if (monthlyEvents[i] > 0) {\n        indexes.push({\n          day: i + 1,\n          count: monthlyEvents[i]\n        });\n      }\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  const dayEvents = DayEventsHandler(props.userId, currentDay.getDate(), currentDay.getMonth() + 1, currentDay.getFullYear());\n  useEffect(() => {\n    if (props.calendarData && dayEvents) {\n      props.calendarData(dayEvents);\n    }\n  }, [dayEvents, props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: dayEvents ? dayEvents.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", currentDay.getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-controls\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: prevMonth,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0\",\n          children: months[currentDay.getMonth()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: nextMonth,\n          children: /*#__PURE__*/_jsxDEV(ChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: days.map((i, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"week\",\n            children: i\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Days, {\n        day: currentDay,\n        changeCurrentDay: changeCurrentDay,\n        eventIndexes: indexes,\n        currentMonth: currentDay.getMonth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"nrabDUuem3UE7pCGz0E2mXbAUqM=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useEffect","useState","Button","ChevronLeft","ChevronRight","Days","DayEventsHandler","MonthlyEventsHandler","jsxDEV","_jsxDEV","Calendar","props","_s","days","setDays","months","setMonths","currentDay","setCurrentDay","Date","changeCurrentDay","day","year","month","nextMonth","setMonth","getMonth","prevMonth","monthlyEvents","userId","getFullYear","indexes","i","length","push","count","dayEvents","getDate","calendarData","className","children","map","item","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","eventIndexes","currentMonth","_c","$RefreshReg$"],"sources":["/Users/Manan/Desktop/runIt/frontend/src/components/Calendar/calendar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { ChevronLeft, ChevronRight } from \"../SiteElements/icons\";\nimport Days from \"./days\";\nimport {\n  DayEventsHandler,\n  MonthlyEventsHandler,\n} from \"./utilities/action-handler\";\n\nfunction Calendar(props) {\n  // eslint-disable-next-line no-unused-vars\n  const [days, setDays] = useState([\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\",\n  ]);\n\n  // eslint-disable-next-line no-unused-vars\n  const [months, setMonths] = useState([\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ]);\n\n  const [currentDay, setCurrentDay] = useState(new Date());\n\n  const changeCurrentDay = (day) => {\n    setCurrentDay(new Date(day.year, day.month, day.day));\n  };\n\n  const nextMonth = () => {\n    setCurrentDay(new Date(currentDay.setMonth(currentDay.getMonth() + 1)));\n  };\n\n  const prevMonth = () => {\n    setCurrentDay(new Date(currentDay.setMonth(currentDay.getMonth() - 1)));\n  };\n\n  const monthlyEvents = MonthlyEventsHandler(\n    props.userId,\n    currentDay.getMonth() + 1,\n    currentDay.getFullYear()\n  );\n\n  if (monthlyEvents) {\n    var indexes = [];\n\n    for (var i = 0; i < monthlyEvents.length; i++) {\n      if (monthlyEvents[i] > 0) {\n        indexes.push({ day: i + 1, count: monthlyEvents[i] });\n      }\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  const dayEvents = DayEventsHandler(\n    props.userId,\n    currentDay.getDate(),\n    currentDay.getMonth() + 1,\n    currentDay.getFullYear()\n  );\n\n  useEffect(() => {\n    if (props.calendarData && dayEvents) {\n      props.calendarData(dayEvents);\n    }\n  }, [dayEvents, props]);\n\n  return (\n    <div className=\"calendar\">\n      <div>\n        {dayEvents\n          ? dayEvents.map((item, i) => {\n              return (\n                <span key={i}>\n                  {item.title}\n                  <br />\n                </span>\n              );\n            })\n          : null}\n      </div>\n\n      <div className=\"head\">\n        <span> {currentDay.getFullYear()}</span>\n        <div className=\"month-controls\">\n          <Button onClick={prevMonth}>\n            <ChevronLeft />\n          </Button>\n          <h6 className=\"m-0\">{months[currentDay.getMonth()]}</h6>\n          <Button onClick={nextMonth}>\n            <ChevronRight />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"body\">\n        <div className=\"header\">\n          {days.map((i, index) => {\n            return (\n              <div key={index} className=\"week\">\n                {i}\n              </div>\n            );\n          })}\n        </div>\n\n        <Days\n          day={currentDay}\n          changeCurrentDay={changeCurrentDay}\n          eventIndexes={indexes}\n          currentMonth={currentDay.getMonth()}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}