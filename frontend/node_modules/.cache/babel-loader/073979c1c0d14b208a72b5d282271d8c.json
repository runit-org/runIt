{"ast":null,"code":"import axios from \"axios\";\nimport setToken from \"../securityUtils/setToken\";\nimport { GET_ERRORS, SET_CURRENT_USER, GET_USERS, GET_USER, CHECK_TOKEN } from \"./types\";\nimport jwt_decode from \"jwt-decode\";\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:8000/api/register\", newUser);\n    setTimeout(() => {\n      history.push(\"/SignIn\");\n    }, 2000);\n    dispatch({\n      type: GET_ERRORS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const checkToken = () => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:8000/api/checkToken\");\n    dispatch({\n      type: CHECK_TOKEN,\n      payload: res.data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const login = LoginRequest => async dispatch => {\n  try {\n    //post => login request\n    const res = await axios.post(\"http://localhost:8000/api/login\", LoginRequest); //extract token from data\n\n    const token = res.data.data.token;\n    console.log(res); //store token in local storage\n\n    localStorage.setItem(\"token\", token); //set token in header\n\n    setToken(token); //get data from response\n\n    const decoded = {\n      name: res.data.data.name,\n      id: res.data.data.id\n    };\n    var decoded2 = jwt_decode(token);\n    /* console.log(decoded2); */\n\n    localStorage.setItem(\"id\", decoded.id);\n    localStorage.setItem(\"scopes\", decoded2.scopes);\n    localStorage.setItem(\"userName\", decoded.name);\n    const res2 = await axios.post(\"http://localhost:8000/api/checkToken\");\n    localStorage.setItem(\"tokenIsValid\", res2.data.message);\n    console.log(res2.data); //dispatch to securityReducer\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const logout = history => async dispatch => {\n  const res = await axios.get(\"http://localhost:8000/api/logout\");\n  localStorage.clear();\n  setToken(false);\n  history.push(\"/SignIn\");\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: null\n  });\n};\nexport const getUsers = () => async dispatch => {\n  const res = await axios.get(`http://localhost:8000/api/users/all/`);\n  dispatch({\n    type: GET_USERS,\n    payload: res.data\n  });\n};\nexport const getUser = id => async dispatch => {\n  const res = await axios.get(`http://localhost:8000/api/user/${id}`);\n  dispatch({\n    type: GET_USER,\n    payload: res.data\n  });\n};","map":{"version":3,"sources":["/Users/mananlodhia/Desktop/Projects/EventMatcher/frontend/frontend/src/actions/securityActions.js"],"names":["axios","setToken","GET_ERRORS","SET_CURRENT_USER","GET_USERS","GET_USER","CHECK_TOKEN","jwt_decode","createNewUser","newUser","history","dispatch","res","post","setTimeout","push","type","payload","data","error","response","checkToken","login","LoginRequest","token","console","log","localStorage","setItem","decoded","name","id","decoded2","scopes","res2","message","logout","get","clear","getUsers","getUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport setToken from \"../securityUtils/setToken\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  GET_USERS,\n  GET_USER,\n  CHECK_TOKEN,\n} from \"./types\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"http://localhost:8000/api/register\", newUser);\n    setTimeout(() => {\n      history.push(\"/SignIn\");\n    }, 2000);\n    dispatch({\n      type: GET_ERRORS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const checkToken = () => async (dispatch) => {\n  try {\n    const res = await axios.post(\"http://localhost:8000/api/checkToken\");\n    dispatch({\n      type: CHECK_TOKEN,\n      payload: res.data.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    //post => login request\n    const res = await axios.post(\n      \"http://localhost:8000/api/login\",\n      LoginRequest\n    );\n    //extract token from data\n    const token = res.data.data.token;\n    console.log(res);\n    //store token in local storage\n    localStorage.setItem(\"token\", token);\n    //set token in header\n    setToken(token);\n    //get data from response\n    const decoded = {\n      name: res.data.data.name,\n      id: res.data.data.id,\n    };\n    var decoded2 = jwt_decode(token);\n    /* console.log(decoded2); */\n\n    localStorage.setItem(\"id\", decoded.id);\n    localStorage.setItem(\"scopes\", decoded2.scopes);\n    localStorage.setItem(\"userName\", decoded.name);\n\n    const res2 = await axios.post(\"http://localhost:8000/api/checkToken\");\n    localStorage.setItem(\"tokenIsValid\", res2.data.message);\n    console.log(res2.data);\n\n    //dispatch to securityReducer\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const logout = (history) => async (dispatch) => {\n  const res = await axios.get(\"http://localhost:8000/api/logout\");\n  localStorage.clear();\n  setToken(false);\n  history.push(\"/SignIn\");    \n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: null,\n  });\n};\n\n\nexport const getUsers = () => async (dispatch) => {\n  const res = await axios.get(`http://localhost:8000/api/users/all/`);\n  dispatch({\n    type: GET_USERS,\n    payload: res.data,\n  });\n};\n\nexport const getUser = (id) => async (dispatch) => {\n  const res = await axios.get(`http://localhost:8000/api/user/${id}`);\n  dispatch({\n    type: GET_USER,\n    payload: res.data,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}