{"ast":null,"code":"var _jsxFileName = \"/Users/Manan/Desktop/runIt/frontend/src/components/UserAuth/reset-pw.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetPw } from \"../../actions/securityActions\";\nimport { Link } from \"react-router-dom\";\nimport ErrorToast from \"../../Layouts/error-toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MsgToast } from \"../../Layouts/msg-toast\";\nimport { FormButton } from \"./utilities/auth-builder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ResetPassword(props) {\n  _s();\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const [c_password, set_c_Password] = useState({});\n  const [password, setPassword] = useState({});\n  const [load, setLoad] = useState(false);\n  const [show, setShow] = useState(false);\n  const [formSwitch, setFormSwitch] = useState(false);\n  var errorStatus = useSelector(errorReducer => errorReducer.errors.errors);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userData = {\n      password: password,\n      c_password: c_password,\n      token: props.token\n    };\n    dispatch(resetPw(userData, setLoad, setShow));\n  };\n  useEffect(() => {\n    if (errorStatus && errorStatus.status === 200) {\n      setTimeout(() => {\n        navigate(\"/\", {\n          replace: true\n        });\n      }, 1000);\n    }\n  }, [navigate, errorStatus]);\n  useEffect(() => {\n    setFormSwitch(load);\n  }, [load]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorToast, {\n      showToast: show,\n      variant: errorStatus.status === 200 ? MsgToast().successVariant : MsgToast().errorVariant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: formSwitch,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => {\n          handleSubmit(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"subTitle\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"text-muted visually-hidden\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"text-muted visually-hidden\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            onChange: e => set_c_Password(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n          load: load,\n          name: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Return to log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ResetPassword, \"DRRdPC6c4o7I5ou1nuwG3jrlIv8=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useEffect","useState","Form","Row","Col","useDispatch","useSelector","resetPw","Link","ErrorToast","useNavigate","MsgToast","FormButton","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassword","props","_s","dispatch","navigate","c_password","set_c_Password","password","setPassword","load","setLoad","show","setShow","formSwitch","setFormSwitch","errorStatus","errorReducer","errors","handleSubmit","e","preventDefault","userData","token","status","setTimeout","replace","children","showToast","variant","successVariant","errorVariant","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onSubmit","className","Group","controlId","Label","Control","type","placeholder","onChange","target","value","required","name","to","_c","$RefreshReg$"],"sources":["/Users/Manan/Desktop/runIt/frontend/src/components/UserAuth/reset-pw.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetPw } from \"../../actions/securityActions\";\nimport { Link } from \"react-router-dom\";\nimport ErrorToast from \"../../Layouts/error-toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MsgToast } from \"../../Layouts/msg-toast\";\nimport { FormButton } from \"./utilities/auth-builder\";\n\nfunction ResetPassword(props) {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  const [c_password, set_c_Password] = useState({});\n  const [password, setPassword] = useState({});\n  const [load, setLoad] = useState(false);\n  const [show, setShow] = useState(false);\n  const [formSwitch, setFormSwitch] = useState(false);\n\n  var errorStatus = useSelector((errorReducer) => errorReducer.errors.errors);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const userData = {\n      password: password,\n      c_password: c_password,\n      token: props.token,\n    };\n\n    dispatch(resetPw(userData, setLoad, setShow));\n  };\n\n  useEffect(() => {\n    if (errorStatus && errorStatus.status === 200) {\n      setTimeout(() => {\n        navigate(\"/\", {\n          replace: true,\n        });\n      }, 1000);\n    }\n  }, [navigate, errorStatus]);\n\n  useEffect(() => {\n    setFormSwitch(load);\n  }, [load]);\n\n  return (\n    <>\n      <ErrorToast\n        showToast={show}\n        variant={\n          errorStatus.status === 200\n            ? MsgToast().successVariant\n            : MsgToast().errorVariant\n        }\n      />\n\n      <fieldset disabled={formSwitch}>\n        <Form\n          onSubmit={(e) => {\n            handleSubmit(e);\n          }}\n        >\n          <div className=\"mb-4\">\n            <h4 className=\"subTitle\">Reset Password</h4>\n          </div>\n\n          <Form.Group className=\"mb-3\" controlId=\"password\">\n            <Form.Label className=\"text-muted visually-hidden\">\n              Password\n            </Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label className=\"text-muted visually-hidden\">\n              Confirm Password\n            </Form.Label>\n\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              onChange={(e) => set_c_Password(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <FormButton load={load} name=\"Confirm\" />\n          <hr className=\"divider\" />\n          <Row className=\"mt-3\">\n            <Col className=\"text-center\">\n              <Link to=\"/\">Return to log in</Link>\n            </Col>\n          </Row>\n        </Form>\n      </fieldset>\n    </>\n  );\n}\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}