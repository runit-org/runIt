{"version":3,"file":"static/js/4.b9ec3536.chunk.js","mappings":"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","sources":["components/Profile/user-profile.js","components/Dashboards/profile-dash.js","components/Profile/utilities/action-handlers.js","components/Profile/utilities/profile-builder.js","components/Profile/vote.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/ButtonGroup.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { UserContext } from \"../Context/user-context\";\nimport { DisplayImage } from \"../SiteElements/user-displayimg\";\nimport UserProfileHandler from \"./utilities/action-handlers\";\nimport { UserCardInfo, VoteBadge } from \"./utilities/profile-builder.js\";\nimport Vote from \"./vote\";\n\nfunction UserProfile(props) {\n  const [searchParams] = useSearchParams();\n  const param = searchParams.get(\"user\");\n  const contextUser = useContext(UserContext);\n\n  const user = UserProfileHandler(param ? param : contextUser);\n\n  useEffect(() => {\n    if (props.userData && user) {\n      props.userData(user);\n    }\n  }, [user, props]);\n\n  return (\n    <>\n      {user ? (\n        <div className=\"w-100\">\n          <div className=\"d-flex align-items-center userInfo-div\">\n            <DisplayImage image={user.gravatarImage} />\n\n            <div className=\"ms-3\">\n              <Link\n                to={{\n                  pathname: \"/profile\",\n                  search: `user=${user.username}`,\n                }}\n              >\n                @{user.username}\n              </Link>\n\n              <small className=\"d-block text-muted\">{user.email}</small>\n            </div>\n          </div>\n          <div className=\"mt-3 \">\n            <VoteBadge votes={user.totalVote} />\n            <UserCardInfo />\n          </div>\n          {user.username !== contextUser ? (\n            <div className=\"mt-4\">\n              <Vote\n                userId={user.id}\n                username={user.username}\n                voteStatus={user.voteStatus}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport default UserProfile;\n","import React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport UserProfile from \"../Profile/user-profile\";\n\nfunction ProfileDash() {\n  const [currUserData, setCurrUserData] = useState([]);\n\n  const child_data = (data) => {\n    if (data) {\n      setCurrUserData(data);\n    }\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div className=\"dash-container\">\n        <div className=\"content\">{currUserData.username}</div>\n\n        <div className=\"sidebar\">\n          <div className=\"sidebar-wrapper\">\n            <div className=\"sidebar_right\">\n              <Card>\n                <Card.Body>\n                  <UserProfile userData={child_data} />\n                </Card.Body>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileDash;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserProfile } from \"../../../actions/userActions\";\n\nconst UserProfileHandler = (data) => {\n  const dispatch = useDispatch();\n  const [userProfile, setUserProfile] = useState({});\n\n  useEffect(() => {\n    if (data) {\n      dispatch(getUserProfile(data));\n    }\n  }, [dispatch, data]);\n\n  var profile = useSelector((userReducer) => userReducer.users.userProfile);\n\n  useEffect(() => {\n    if (profile) {\n      setUserProfile(profile.data);\n    }\n  }, [profile]);\n\n  return userProfile;\n};\n\nexport default UserProfileHandler;\n","import { Badge } from \"react-bootstrap\";\n\nexport const VoteBadge = (props) => {\n  return (\n    <>\n      <Badge id=\"vote_badge\" className=\"mb-2\">\n        {props.votes > 1 ? <>{props.votes} votes</> : <>{props.votes} vote</>}\n      </Badge>\n    </>\n  );\n};\n\nexport const UserCardInfo = () => {\n  return (\n    <>\n      <small className=\"d-block text-muted content_sm5\">\n        <span className=\"d-inline-flex align-items-center\">\n          Melbourne, Australia\n        </span>\n      </small>\n      <small className=\"d-block text-muted content_sm5\">\n        <span className=\"d-inline-flex align-items-center\">\n          Last event created was in the past week\n        </span>\n      </small>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { getUserProfile, vote } from \"../../actions/userActions\";\nimport { Thumbsup, Thumbsdown } from \"../SiteElements/icons\";\n\nfunction Vote(props) {\n  const dispatch = useDispatch();\n\n  const voteUser = (status) => {\n    const postData = { status: status };\n    dispatch(vote(props.userId, postData)).then(() => {\n      dispatch(getUserProfile(props.username));\n    });\n  };\n\n  return (\n    <ButtonGroup className=\"vote_btnGroup gap-3\">\n      <Button\n        variant=\"primary\"\n        onClick={() => {\n          voteUser(1);\n        }}\n        className={props.voteStatus === \"UPVOTE\" ? \"user_vote\" : \"\"}\n      >\n        <Thumbsup />\n        <span className=\"visually-hidden\">up vote</span>\n      </Button>\n\n      <Button\n        className={props.voteStatus === \"DOWNVOTE\" ? \"user_vote\" : \"\"}\n        variant=\"primary\"\n        onClick={() => {\n          voteUser(-1);\n        }}\n      >\n        <Thumbsdown />\n\n        <span className=\"visually-hidden\">down vote</span>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default Vote;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;"],"names":["props","useSearchParams","param","get","contextUser","useContext","UserContext","user","UserProfileHandler","useEffect","userData","className","image","gravatarImage","to","pathname","search","username","email","votes","totalVote","userId","id","voteStatus","useState","currUserData","setCurrUserData","style","position","Card","data","dispatch","useDispatch","userProfile","setUserProfile","getUserProfile","profile","useSelector","userReducer","users","VoteBadge","UserCardInfo","voteUser","status","postData","vote","then","variant","onClick","Badge","React","ref","bsPrefix","bg","pill","text","as","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","ButtonGroup","size","vertical","rest","baseClass","role"],"sourceRoot":""}